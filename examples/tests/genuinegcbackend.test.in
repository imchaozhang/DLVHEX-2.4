3col.hex 3col.out --solver=genuinegc
agg1.hex agg1.out --solver=genuinegc --aggregate-enable --aggregate-mode=simplify
agg2.hex agg2.out --solver=genuinegc --aggregate-enable --aggregate-mode=simplify
agg3.hex agg3.out --nofacts --solver=genuinegc --aggregate-enable --aggregate-mode=simplify
agg4.hex agg4.out --nofacts --solver=genuinegc --aggregate-enable --aggregate-mode=simplify
anonymousvariable1.hex anonymousvariable1.out --nofacts --solver=genuinegc
builtin_safety1.hex builtin_safety1.stderr --solver=genuinegc
builtin_safety1a.hex builtin_safety1a.stderr --solver=genuinegc
builtin_safety1b.hex builtin_safety1b.stderr --solver=genuinegc
builtin_safety1c.hex builtin_safety1c.stderr --solver=genuinegc
# test is dlv specific builtin_safety1d.hex builtin_safety1d.out --solver=genuinegc
# test is dlv specific builtin_safety2.hex builtin_safety2.out --solver=genuinegc
comments.hex comments.out --solver=genuinegc
duplicaterule.asp duplicaterule.out --solver=genuinegc
equality.hex equality.out --solver=genuinegc
nonmoncycle.hex nonmoncycle.out --solver=genuinegc
nonmoncycle.hex nonmoncycle.out --solver=genuinegc --flpcheck=ufs
nonmoncycle.hex nonmoncycle.out --solver=genuinegc --flpcheck=aufs
nonmoncycle2.hex nonmoncycle2.out --solver=genuinegc
nonmoncycle2.hex nonmoncycle2.out --solver=genuinegc --flpcheck=ufs
nonmoncycle2.hex nonmoncycle2.out --solver=genuinegc --flpcheck=aufs
extatom1.hex extatom1.out --solver=genuinegc
extatom1simple.hex extatom1simple.out --solver=genuinegc
extatom1_manualunits1.hex extatom1.out --solver=genuinegc --manualevalheuristics-enable
extatom1_manualunits2.hex extatom1.out --solver=genuinegc --manualevalheuristics-enable
extatom1_manualunits3.hex extatom1.out --solver=genuinegc --manualevalheuristics-enable
extatom1_manualunits4.hex extatom1.out --solver=genuinegc --manualevalheuristics-enable
extatom2.hex extatom2.out --solver=genuinegc
extatom2safety.hex extatom2.out --solver=genuinegc
extatom3.hex extatom3.out --nofacts --solver=genuinegc
# TODO make ASPSolverManager work if we do not have DLV extatom3.hex extatom3.out --nofacts --heuristics=manual:@abs_top_srcdir@/examples/extatom3_evalplana.txt --solver=genuinegc
# TODO make ASPSolverManager work if we do not have DLV extatom3.hex extatom3.out --nofacts --heuristics=manual:@abs_top_srcdir@/examples/extatom3_evalplanb.txt --solver=genuinegc
# TODO make ASPSolverManager work if we do not have DLV extatom3.hex extatom3.out --nofacts --heuristics=asp:@abs_top_srcdir@/examples/extatom3_aspheur_old.asp --solver=genuinegc
# TODO make ASPSolverManager work if we do not have DLV extatom3.hex extatom3_faultya.stderr --nofacts --heuristics=asp:@abs_top_srcdir@/examples/extatom3_aspheur_faultya.asp --solver=genuinegc
# TODO make ASPSolverManager work if we do not have DLV extatom3.hex extatom3_faultyb.stderr --nofacts --heuristics=asp:@abs_top_srcdir@/examples/extatom3_aspheur_faultyb.asp --solver=genuinegc
extatom4.hex extatom4.out --solver=genuinegc
extatom5.hex extatom5.out --solver=genuinegc
extatom6.hex extatom6.out --solver=genuinegc
extatom7.hex extatom7.out --nofacts --solver=genuinegc
extatom8.hex extatom8.out --nofacts --solver=genuinegc
extatom9.hex extatom9.out --solver=genuinegc
extatom10.hex extatom10.out --solver=genuinegc --heuristics=monolithic
auxinput.hex auxinput.out --solver=genuinegc
higherorder1.hex higherorder1.out --nofacts --higherorder-enable --solver=genuinegc
higherorder2.hex higherorder2.out --nofacts --higherorder-enable --solver=genuinegc
higherorder3.hex higherorder3.out --nofacts --higherorder-enable --solver=genuinegc
higherorder4.hex higherorder4.out --nofacts --higherorder-enable --solver=genuinegc
higherorder5.hex higherorder5.out --nofacts --higherorder-enable --solver=genuinegc
# TODO why is this disabled? higherorder5except.hex higherorder5except.stderr --higherorder-enable --solver=genuinegc
manyanswersets.hex manyanswersets_twomodels.stdout --number=2 --solver=genuinegc
# TODO this works in genuineii but not here maxint.hex maxint.out --solver=genuinegc
minimality.hex minimality.out --solver=genuinegc
naftest.hex naftest.out --solver=genuinegc
nonmon_guess.hex nonmon_guess.out --solver=genuinegc
nonmon_inc.hex nonmon_inc.out --solver=genuinegc
nonmon_noloop.hex nonmon_noloop.out --solver=genuinegc
notstronglysafe1.hex notstronglysafe1.stderr --solver=genuinegc
notwellfounded1.hex notwellfounded1_nofacts.out --nofacts --solver=genuinegc
notwellfounded1.hex notwellfounded1_withfacts.out --solver=genuinegc
notwellfounded2.hex notwellfounded2.out --nofacts --solver=genuinegc
operators.hex operators.out --solver=genuinegc
percentparser.hex percentparser.out --solver=genuinegc
query_asp_ground1.hex query_asp_ground1b.stdout --query-enable --query-brave --solver=genuinegc
query_asp_ground1.hex query_asp_ground1c.stdout --query-enable --query-cautious --solver=genuinegc
query_asp_ground2.hex query_brave_false.stdout --query-enable --query-brave --solver=genuinegc
query_asp_ground2.hex query_asp_ground2c.stdout --query-enable --query-cautious --solver=genuinegc
query_asp_ground3.hex query_asp_ground3b.stdout --query-enable --query-brave --solver=genuinegc
query_asp_ground3.hex query_cautious_true.stdout --query-enable --query-cautious --solver=genuinegc
query_asp_ground4.hex query_brave_false.stdout --query-enable --query-brave --solver=genuinegc
query_asp_ground4.hex query_cautious_true.stdout --query-enable --query-cautious --solver=genuinegc
query_asp_ground5.hex query_asp_ground5b.stdout --query-enable --query-brave --solver=genuinegc
query_asp_ground5.hex query_asp_ground5c.stdout --query-enable --query-cautious --solver=genuinegc
query_asp_ground6.hex query_asp_ground6b.stdout --query-enable --query-brave --solver=genuinegc
query_asp_ground6.hex query_asp_ground6c.stdout --query-enable --query-cautious --solver=genuinegc
query_asp_nonground1.hex query_asp_nonground1b.out --query-enable --query-brave --solver=genuinegc
query_asp_nonground1.hex no_model.out --query-enable --query-cautious --solver=genuinegc
query_asp_nonground2.hex query_asp_nonground2b.out --query-enable --query-brave --solver=genuinegc
query_asp_nonground2.hex no_model.out --query-enable --query-cautious --solver=genuinegc
query_asp_nonground3.hex query_asp_nonground3b.out --query-enable --query-brave --solver=genuinegc
query_asp_nonground3.hex query_asp_nonground3c.out --query-enable --query-cautious --solver=genuinegc
query_hex_ground1.hex query_hex_ground1b.stdout --query-enable --query-brave --solver=genuinegc
query_hex_ground1.hex query_hex_ground1c.stdout --query-enable --query-cautious --solver=genuinegc
query_hex_ground1.hex query_hex_ground1ca.stdout --query-enable --query-cautious --query-all --solver=genuinegc
query_hex_nonground1.hex query_hex_nonground1b.out --query-enable --query-brave --solver=genuinegc
query_hex_nonground1.hex no_model.out --query-enable --query-cautious --solver=genuinegc
# TODO why is this disabled? rec_agg_bug1.hex rec_agg_bug1.stderr --solver=genuinegc
safety1.hex safety1.stderr --solver=genuinegc
safety2.hex safety2.stderr --solver=genuinegc
simple1.hex simple1.out --solver=genuinegc
simple2.hex simple2.out --solver=genuinegc
strongnegation_asp1.hex strongnegation_asp1.out --strongnegation-enable --nofacts --solver=genuinegc
strongnegation_asp2.hex strongnegation_asp2.out --strongnegation-enable --nofacts --solver=genuinegc
strongnegation_asp3.hex strongnegation_asp3.out --strongnegation-enable --nofacts --solver=genuinegc
strongnegation_asp4.hex strongnegation_asp4.out --strongnegation-enable --nofacts --solver=genuinegc
strongnegation_asp5.hex strongnegation_asp5.out --strongnegation-enable --nofacts --solver=genuinegc
strongnegation_asp6.hex strongnegation_asp6.out --strongnegation-enable --solver=genuinegc
strongnegation_asp7.hex strongnegation_asp7.out --strongnegation-enable --solver=genuinegc
# TODO tertop in genuinegc (it works in genuineii) tertop.hex tertop.out --solver=genuinegc
variable_predicate_inputs.hex variable_predicate_inputs.stderr --solver=genuinegc
wellfounded1.hex wellfounded1.out --nofacts --solver=genuinegc
wellfounded2.hex wellfounded2.out --nofacts --solver=genuinegc
empty.hex testrepetition.stdout --testplugin-test-repetition --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Inconsistent.mlp module-Inconsistent.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Not-ic-Stratified.mlp module-Not-ic-Stratified.stderr --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-EvenOdd.mlp module-EvenOdd.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-EvenOddTwoMain.mlp module-EvenOddTwoMain.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-EvenOddTwoCalls1.mlp module-EvenOddTwoCalls1.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-EvenOddTwoCalls2.mlp module-EvenOddTwoCalls2.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Reachability.mlp module-Reachability.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Cardinality.mlp module-Cardinality.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-ABBA.mlp module-ABBA.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Disjunction.mlp module-Disjunction.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Negation.mlp module-Negation.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Indirection.mlp module-Indirection.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-AFin.mlp module-AFin.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Cs.mlp module-Cs.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-i-Stratified.mlp module-i-Stratified.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-i-Stratified-2.mlp module-i-Stratified-2.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Hanoi.mlp module-Hanoi.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-Complex.mlp module-Complex.out --mlp --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-EvenOdd.mlp module-EvenOdd-n1.out --mlp --number=1 --solver=genuinegc
# TODO make MLP work if we do not have DLV (ASPSolver) module-EvenOdd.mlp module-EvenOdd.out --mlp --split --solver=genuinegc
liberalsafety1.hex liberalsafety1.out --liberalsafety --solver=genuinegc
liberalsafety2.hex liberalsafety2.out --liberalsafety --solver=genuinegc
liberalsafety3.hex liberalsafety3.out --liberalsafety --solver=genuinegc
liberalsafety4.hex liberalsafety4.out --liberalsafety --solver=genuinegc
liberalsafety5.hex liberalsafety5.out --liberalsafety --solver=genuinegc
liberalsafety6.hex liberalsafety6.out --liberalsafety --solver=genuinegc
liberalsafety7.hex liberalsafety7.out --liberalsafety --solver=genuinegc --heuristics=monolithic
liberalsafety8.hex liberalsafety8.out --liberalsafety --solver=genuinegc
liberalsafety9.hex liberalsafety9.out --liberalsafety --solver=genuinegc
functionsymbols1.hex functionsymbols1.out --solver=genuinegc
functionsymbols2.hex functionsymbols2.out --liberalsafety --solver=genuinegc
functionsymbols3.hex functionsymbols3.out --liberalsafety --solver=genuinegc
functionsymbols4.hex functionsymbols4.out --solver=genuinegc --function-maxarity=2
functionsymbols5.hex functionsymbols5.out --liberalsafety --solver=genuinegc
functionsymbols1.hex functionsymbols1.out --liberalsafety --solver=genuinegc --function-maxarity=2 --function-rewrite
functionsymbols2.hex functionsymbols2.out --liberalsafety --solver=genuinegc --function-maxarity=2 --function-rewrite
functionsymbols3.hex functionsymbols3.out --liberalsafety --solver=genuinegc --function-maxarity=2 --function-rewrite
functionsymbols4.hex functionsymbols4.out --solver=genuinegc --function-maxarity=2 --function-rewrite
functionsymbols5.hex functionsymbols5.out --liberalsafety --solver=genuinegc --function-maxarity=2 --function-rewrite
functionsymbols6.hex functionsymbols6.stderr --liberalsafety --solver=genuinegc --function-maxarity=2 --function-rewrite
non3col.hex non3col.out --solver=genuinegc
non3col2.hex non3col2.out --solver=genuinegc
