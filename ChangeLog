2014-09-17  Christoph Redl <redl@kr.tuwien.ac.at>
	* src/PythonPlugin.cpp: Add support for subprogram evaluation.
	* include/dlvhex2/PythonPlugin.h: Likewise.
	* src/dlvhex.cpp: Allow for calling a Python script (with
	dlvhex support) instead of evaluating a program.

2014-09-13  Christoph Redl <redl@kr.tuwien.ac.at>
	* build_potassco.sh: Upgrade to clasp 3.1.0 and gringo 4.4.0.
	* checkout_build_potassco.sh: Likewise.
	* bootstrap-extra.sh: Likewise.
	* bootstrap-windows.sh: Upgrade to clasp 3.1.0.

2014-09-10  Christoph Redl <redl@kr.tuwien.ac.at>
	* src/PythonPlugin.cpp: Prepare Python-interface for plugins.
	* include/dlvhex2/PythonPlugin.h: Likewise.

2014-07-27  Christoph Redl <redl@kr.tuwien.ac.at>

	* src/GenuineGuessAndCheckModelGenerator.cpp: Use incremental
	solving for dealing with value invention (works only for simple
	cases so far).
	* include/dlvhex2/GenuineGuessAndCheckModelGenerator.h:
	Likewise.

2014-07-26  Christoph Redl <redl@kr.tuwien.ac.at>

	* src/GringoGrounder.cpp: Support incremental programs
	* include/dlvhex2/GringoGrounder.h: Likewise.
	* src/ClaspSolver.h: Likewise.
	* include/dlvhex2/ClaspSolver.h: Likewise.

2014-04-07  Christoph Redl <redl@kr.tuwien.ac.at>

	* bootstrap-extra.sh: Upgrade to Clasp 3.0.3.
	* build-potassco.sh: Likewise.
	* checkout-build-potassco.sh: Likewise.

2014-03-14  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/ClaspSolver.h: Upgrade to Clasp 3.0.1.
	* src/ClaspSolver.cpp: Likewise.

2014-03-13  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/GringoGrounder.h: Upgrade to Gringo 4.3.0.
	* src/GringoGrounder.cpp: Likewise.

2014-02-15  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/ClaspSolver.h: Upgrade to Clasp 3.0.
	* src/ClaspSolver.cpp: Likewise.
	* include/dlvhex2/GenuineGuessAndCheckModelGenerator.h:
	Simplify implementation.
	* src/GenuineGuessAndCheckModelGenerator.cpp: Likewise.

2014-01-07  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/PluginInterface.h: Allow plugins to provide
	custom model generators.
	* include/dlvhex2/ProgramCtx.h: Likewise.
	* src/PluginInterface.cpp: Likewise.
	* src/ProgramCtx.cpp: Likewise.

2013-12-21  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/HexGrammar.tcc: Implement disjunctions
	with variable length.
	* include/dlvhex2/HexGrammar.h: Likewise.
	* src/HexGrammar.cpp: Likewise.
	* src/InternalGrounder.cpp: Likewise.	
	* src/GringoGrounder.cpp: Likewise.	

2013-12-11  Christoph Redl <redl@kr.tuwien.ac.at>

	* checkout_build_owlcpp.cpp: Add owlcpp for
	RepairModelGenerator.
	* owlcpp/Makefile.am: Likewise.

2013-11-18  Christoph Redl <redl@kr.tuwien.ac.at>

	* src/PhantomPlugin.cpp: Add support for dummy implementations
	of external predicates.
	* include/dlvhex2/PhantomPlugin.h: Likewise.
	* src/dlvhex.cpp: Likewise.

2013-08-19  Peter Schueller <peterschueller@sabanciuniv.edu>

	Release 2.2.0
	* NEWS: summarizing changes
	* src/Makefile.am: Increasing Version numbers.
	* configure.ac: Likewise.

2013-05-22  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/Registry.h: Introduce auxiliary variable
	symbols.
	* src/Registry.cpp: Likewise.
	* include/dlvhex2/FunctionPlugin.h: Add rewriter to transform
	Gringo function syntax to external atoms.
	* src/FunctionPlugin.cpp: Likewise.

2013-04-27  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/FunctionPlugin.h: Implement external atoms for
	function symbol processing.
	* src/FunctionPlugin.cpp: Likewise.

2013-04-25  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/HexGrammar.tcc: Add basic support for function
	symbols.
	* include/dlvhex2/HexGrammar.h: Likewise.
	* include/dlvhex2/Registry.h: Likewise.
	* include/dlvhex2/Term.h: Likewise.
	* src/Registry.cpp: Likewise.
	* src/Term.cpp: Likewise.
	* src/Printer.cpp: Likewise.

2013-03-12  Christoph Redl <redl@kr.tuwien.ac.at>

	* include/dlvhex2/LiberalSafetyChecker.h: Implement plugin interface for
	safety checkers.
	* src/LiberalSafetyChecker.cpp: Likewise.

2013-03-04  Peter Schueller <peterschueller@sabanciuniv.edu>

	* include/dlvhex2/ClaspSolver.h: More efficiency improvments by using
	different data structures/algorithms.
	* src/ClaspSolver.cpp: Likewise.

2013-01-27  Peter Schueller <peterschueller@sabanciuniv.edu>

	* src/dlvhex.cpp: Handling signals to shutdown and display statistics.

2013-01-21  Peter Schueller <peterschueller@sabanciuniv.edu>

	* include/dlvhex2/ManualEvalHeuristicsPlugin.h: Plugin for manually
	specifying evaluation units.
	* src/ManualEvalHeuristicsPlugin.cpp: Likewise.
	* examples/extatom1_manualunits*.hex: Likewise.

2013-01-14  Peter Schueller <peterschueller@sabanciuniv.edu>

	* include/dlvhex2/ClaspSolver.h: Making clasp-to-HEX propagation more
	performant by changing data structures, making it relative, and limiting
	how often it is done for partial assignments.
	* src/ClaspSolver.cpp: Likewise.

2013-01-09  Peter Schueller <peterschueller@sabanciuniv.edu>

	* include/dlvhex2/GringoGrounder.h: Improving grounder performance by
	adapting container data types and eliminating copy and allocation
	operations.
	* include/dlvhex2/PredicateMask.h: Likewise.
	* src/GringoGrounder.cpp: Likewise.
	* src/PredicateMask.cpp: Likewise.

2013-01-07  Peter Schueller <peterschueller@sabanciuniv.edu>

	* src/FLPModelGeneratorBase.cpp: Fixing bug in auxiliary input processing.
	* include/dlvhex2/Atoms.h: Likewise.

2013-01-05  Peter Schueller <peterschueller@sabanciuniv.edu>

	* include/dlvhex2/Benchmarking.h: Making benchmarking more robust
	wrt. multi-threading.
	* src/Benchmarking.cpp: Likewise.

	* include/dlvhex2/ExternalLearningHelper.h: Extending external
	learning interface.
	* src/ExternalLearningHelper.cpp: Likewise.

2012-12-30  Peter Schueller <peterschueller@sabanciuniv.edu>

	* include/dlvhex2/ComponentGraph.h: Unifying component/eval graph
	building and refactoring it to remove code duplications.
	* include/dlvhex2/EvalGraphBuilder.h: Likewise.
	* src/ComponentGraph.cpp: Likewise.
	* src/EvalGraphBuilder.cpp: Likewise.
	* <all evaluation heuristics>: Likewise.

2012-12-21  Peter Schueller <peterschueller@sabanciuniv.edu>

	* src/ComponentGraph.cpp: Fixing bug in SCCi property computation.
	* src/FLPModelGeneratorBase.cpp: Fixing efficiency problem.

2012-12-20  Peter Schueller <peterschueller@sabanciuniv.edu>

	* src/GringoGrounder.cpp: Making gringo debug output visible
	in verbose mode.

2012-12-15  Christoph Redl <redl@kr.tuwien.ac.at>

	* src/ExistsPlugin.cpp: Plugin for existential quantifiers in
	rule heads
	* include/dlvhex2/ExistsPlugin.h: Likewise.

2012-12-12  Peter Schueller <peterschueller@sabanciuniv.edu>

	* buildclaspgringo/Makefile.am: Improving clasp/gringo build.

2012-11-22  Christoph Redl <redl@kr.tuwien.ac.at>

	* src/ClaspSolver.cpp: Upgrade to clasp 2.1.1.
	* checkout_build_potassco.sh: Add 3 gringo patches.

2012-11-09  Christoph Redl <redl@kr.tuwien.ac.at>

	* src/AttributeGraph.cpp: First complete implementation of
	the attribute graph used for more liberal safety conditions.
	* include/dlvhex2/AttributeGraph.h: Likewise.

2012-10-17  Peter Schueller <peterschueller@sabanciuniv.edu>

	Release 2.1.0
	* NEWS: summarizing changes
	* src/Makefile.am: Increasing Version numbers.
	* configure.ac: Likewise.

2012-10-04  Christoph Redl  <redl@kr.tuwien.ac.at>

	* AggregatePlugin.cpp: Implement a simplification strategy for
	aggregates
	* AggregatePluginh: Likewise.
	* GringoGrounder.cpp: 1. Add genuine support for aggregates
	(no translation to external atoms needed).
	2. add support for #int and #maxint
	* ClaspSolver.cpp: Add support for weight rules
	(used for aggregate implementation).
	* ClaspSolver.h: Likewise.
	* Rule.h: Add support for lparse weight rules.
	* ID.h: Likewise.

2012-09-30  Christoph Redl  <redl@kr.tuwien.ac.at>

	* UnfoundedSetChecker.cpp: Enable new assumption-based UFS checker
	* UnfoundedSetChecker.h: Likewise.
	* dlvhex.cpp: Likewise.

2012-09-04  Peter Schueller  <ps@kr.tuwien.ac.at>

	* bootstrap-extra.sh: Downloading gringo and clasp tarballs to ship them with dlvhex source.
	* configure.ac: Unpacking and building gringo and clasp within dlvhex to make them easier to use.
	* build_potassco.sh: Likewise.
	* buildclaspgringo/Makefile.am: Likewise.
	* buildclaspgringo/gringo-clang.patch: Copying patch for gringo for clang from
	https://potassco.svn.sourceforge.net/svnroot/potassco/tags/gringo-3.0.4/patches/patch-clang.diff

2012-09-03  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/State.cpp: Added possibility to repeat evaluation.
	* src/dlvhex.cpp: Likewise.
	* examples/tests/basic.test.in: Likewise.
	* examples/tests/testrepetition.stdout: Likewise.
	* testsuite/TestPlugin.cpp: Likewise.

2012-08-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* examples/Makefile.am: fixing make distcheck

2012-08-10 Christoph Redl   <redl@kr.tuwien.ac.at>

	* WeakConstraintPlugin.h: Implement weak constraints as plugin
	(internal)
	* WeakConstraintPlugin.cpp: Likewise

2012-08-10  Peter Schueller  <ps@kr.tuwien.ac.at>

	* generator/: renamed to mlp-generator/ as this directory is only
	relevant for MLPs.
	* mlp-generator/: Likewise.

	* src/ResultContainer.cpp: Removing deprecated file.

2012-08-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* README: Update libclingo version.

	* AUTHORS: Add Christoph Redl.

2012-08-02 Christoph Redl   <redl@kr.tuwien.ac.at>

	* AggregatePlugin.h: Implement first version of a new (internal)
	plugin as an extension of the existing aggregate-plugin.
	It realizes possibly nested DLV aggregates
	(using the usual syntax) by a rewriting to external atoms;
	this allows for using DLV aggregates also with clasp and internal
	solver backend
	* AggregatePlugin.cpp: Likewise

2012-07-28  Stefano Germano <stefanogermano0@gmail.com>

	Acthex related infrastructure:

	* include/dlvhex2/ProgramCtx.h: PluginEnvironmentContainer that
	contains the Environments and a new function getPluginEnvironment
	* include/dlvhex2/PluginInterface.h: base class PluginEnvironment
	for environments
	* src/Registry.cpp: new auxiliary constant symbol 'a' for Action

2012-06-30 Christoph Redl   <redl@kr.tuwien.ac.at>

	* FLPModelGeneratorBase.h: Implement relaxed notion of strong
	safety; see option --autostrongsafety
	* FLPModelGeneratorBase.tcc: Likewise
	* FLPModelGeneratorBase.cpp: Likewise
	* GenuineGuessAndCheckModelGenerator.h: Likewise
	* GenuineGuessAndCheckModelGenerator.cpp: Likewise
	* GuessAndCheckModelGenerator.h: Likewise
	* GuessAndCheckModelGenerator.cpp: Likewise
	* dlvhex.cpp: Likewise

2012-06-17  Peter Schueller  <ps@kr.tuwien.ac.at>

	* checkout_build_potassco.sh: Added script to checkout and build
	parts of potassco such that it can be used by dlvhex.
	* src/Logger.cpp: Fixed problem of NDEBUG dlvhex vs DEBUG plugin
	builds, now the worst thing that happens is a warning and possibly
	slightly reduced performance in the plugin.

2012-05-31 Christoph Redl   <redl@kr.tuwien.ac.at>

	* ID.h: Introduce a property for external atom input auxiliaries
	* Registry.h: Likewise
	* Registry.cpp: Likewise
	* DependencyGraph.cpp: Likewise
	* FLPModelGeneratorBase.cpp: Modify explicit FLP check
	such that EA input rules are _not_ shifted
	* UnfoundedSetChecker.cpp: Split program for UFS checking into
	strongly connected components;
	Implement "negative external learning" for UFS check
	* UnfoundedSetChecker.h: Likewise
	* GenuineGuessAndCheckModelGenerator.cpp: Likewise
	* GenuineGuessAndCheckModelGenerator.h: Likewise
	* AnnotatedGroundProgram.cpp: Group meta information about
	ground programs (head-cyles, e-cycles,
	mapping of auxes to EAs, etc.) in class AnnotatedGroundProgram
	* AnnotatedGroundProgram.h: Likewise

2012-05-18 Christoph Redl   <redl@kr.tuwien.ac.at>

	* EvalHeuristicGreedy.cpp: Add heuristic optimized for being
	used with EBL and UFL
	* EvalHeuristicGreedy.h: Likewise
	* ComponentGraph.cpp: Add ComponentInfo property "fixedDomain"
	* ComponentGraph.h: Likewise

2012-05-18 Christoph Redl   <redl@kr.tuwien.ac.at>

	* PluginInterface.cpp Add nogood generalization
	* PluginInterface.h Likewise
	* GenuineGuessAndCheckModelGenerator.cpp Likewise
	* GenuineGuessAndCheckModelGenerator.h Likewise

2012-05-09  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/State.cpp: Reimplemented -filter option (closes #59).
	* src/AnswerSetPrinterCallback.cpp: Likewise.
	* include/dlvhex2/AnswerSetPrinterCallback.h: Likewise.

2012-05-05 Christoph Redl   <redl@kr.tuwien.ac.at>

	* src/Nogood.cpp: Likewise
	* include/dlvhex2/Nogood.h: New print methods
	* src/UnfoundedSetChecker.cpp: Nogood exchange
	between UFS detection and main search
	* include/dlvhex2/UnfoundedSetChecker.h: Likewise
	* include/dlvhex2/FLPModelGeneratorBase.tcc: small changes

2012-04-28 Christoph Redl   <redl@kr.tuwien.ac.at>

	* dlvhex.cpp: Remove option "--mincheck"
	* GuessAndCheckModelGenerator.cpp: Likewise.
	* GuessAndCheckModelGenerator.h: Likewise
	* GenuineGuessAndCheckModelGenerator.cpp: Likewise;
	Implement a framework for external atom evaluation heuristics
	and UFS check heuristics.
	* GenuineGuessAndCheckModelGenerator.h: Likewise

2012-04-26 Christoph Redl   <redl@kr.tuwien.ac.at>

	* FLPModelGeneratorBase.h: Implement well-justified FLP semantics
	* FLPModelGeneratorBase.cpp: Likewise

2012-04-21  Christoph Redl   <redl@kr.tuwien.ac.at>

	* src/Registry.cpp: Implement reverse lookup for auxiliary constant symbols
	* include/dlvhex2/h: Likewise

2012-04-13  Christoph Redl   <redl@kr.tuwien.ac.at>

	* src/dlvhex.cpp: Change of default setting: no explicit minimality check by default (obsolete due to FLP check).
	Add option "--ufslearn".
	* include/dlvhex2/FLPModelGeneratorBase.h: Add an method for learning nogoods from UFS checks.
	Move method for learning nogoods from failed FLP checks from GenuineGuessAndCheckModelGenerator.
	* src/FLPModelGeneratorBase.cpp: Likewise
	* include/dlvhex2/GenuineGuessAndCheckModelGenerator.h: Likewise
	* src/GenuineGuessAndCheckModelGenerator.cpp: Likewise
	* include/dlvhex2/ID.h:
	Introduce property for external atom auxiliaries to distinct them from other auxiliaries
	(needed by genuine solvers).
	* include/dlvhex2/Registry.cpp: Update getAuxiliearyConstant accordingly.
	* include/dlvhex2/OrdinaryAtomTable.h: Add method getIDByAddress.

2012-04-11  Christoph Redl   <redl@kr.tuwien.ac.at>

	* include/dlvhex2/FLPModelGeneratorBase.h: Exploit (anti-)monotonicity in UFS check.
	* src/FLPModelGeneratorBase.cpp: Likewise.

2012-04-06  Christoph Redl   <redl@kr.tuwien.ac.at>
	
	* include/dlvhex2/FLPModelGeneratorBase.h: Implement UFS-based FLP check
	* src/FLPModelGeneratorBase.cpp: Likewise.

2012-04-02  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex2/OrdinaryASPSolver.h: Introducing OrdinaryASPSolver to
	unify FLP model checking, GenuineSolver is a direct implementation of
	this interface.
	Added new wrapper "ASMOrdinaryASPSolver" for ASPSolverManager in
	GuessAndCheckModelGenerator which implements OrdinaryASPSolver.
	Made GenuineGuessAndCheckModelGenerator::postprocessedInput a const
	pointer as it should be.
	Made FLPModelGeneratorBase::isSubsetMinimalFLPModel a template method and
	moved to FLPModelGeneratorBase.tcc.
	* include/dlvhex2/FLPModelGeneratorBase.tcc: Likewise.
	* include/dlvhex2/GuessAndCheckModelGenerator.h: Likewise.
	* include/dlvhex2/FLPModelGeneratorBase.h: Likewise.
	* include/dlvhex2/GenuineSolver.h: Likewise.
	* include/dlvhex2/GenuineGuessAndCheckModelGenerator.h: Likewise.
	* include/dlvhex2/fwd.h: Likewise.
	* include/dlvhex2/Makefile.am: Likewise.
	* src/GuessAndCheckModelGenerator.cpp: Likewise.
	* src/GenuineGuessAndCheckModelGenerator.cpp: Likewise.
	* src/FLPModelGeneratorBase.cpp: Likewise.

	* include/dlvhex2/ASPSolverManager.h: Unifying: replacing ASPProgram by
	OrdinaryASPProgram.
	* include/dlvhex2/ASPSolver.h: Likewise.
	* src/WellfoundedModelGenerator.cpp: Likewise.
	* src/GuessAndCheckModelGenerator.cpp: Likewise.
	* src/ASPSolver_libclingo.cpp: Likewise.
	* src/ASPSolver_dlv.cpp: Likewise.
	* src/MLPSolver.cpp: Likewise.
	* src/ASPSolverManager.cpp: Likewise.
	* src/ASPSolver.cpp: Likewise.
	* src/PlainModelGenerator.cpp: Likewise.
	* testsuite/TestASPSolver.cpp: Likewise.

2012-03-28  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex2/Logger.h: Mutex for more readable logs in debug mode.
	* src/Logger.cpp: Likewise.

2012-03-17  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex2/HexGrammar.tcc: Ensuring that after parsing the
	IDs in idb are unique (workaround).
	* src/HexParser.cpp: Likewise.

2012-03-17  Peter Schueller  <ps@kr.tuwien.ac.at>

	* configure.ac: Fixing help message.

	* include/dlvhex2/EvalHeuristicShared.h: Fixing --disable-shared build.
	* src/Makefile.am: Likewise.
	* src/EvalHeuristicShared.cpp: Likewise (new file).

	* src/dlvhex.cpp: Loading plugins before failing if no input file. (This has
	the benefit of giving a help message for all plugins even with no input file.)

2012-03-11  Peter Schueller  <ps@kr.tuwien.ac.at>

	Release version 2.0.0.

	* NEWS: Describe Changes for Release 2.0.0.

	* TODO: Moved several #warnings which were TODOs to TODO,
	fixed two of them in the process (AggregateAtom::atoms renamed
	to AggregateAtom::literals, useless data fields removed from
	ASPSolver::DLVSoftware::Options).
	* include/dlvhex2/HexGrammar.h: Likewise.
	* include/dlvhex2/ASPSolver.h: Likewise.
	* include/dlvhex2/Table.h: Likewise.
	* include/dlvhex2/ModuleTable.h: Likewise.
	* include/dlvhex2/EvalHeuristicShared.h: Likewise.
	* include/dlvhex2/Registry.h: Likewise.
	* include/dlvhex2/ComfortPluginInterface.h: Likewise.
	* include/dlvhex2/HexGrammar.tcc: Likewise.
	* include/dlvhex2/Atoms.h: Likewise.
	* include/dlvhex2/ComponentGraph.h: Likewise.
	* include/dlvhex2/ModuleAtomTable.h: Likewise.
	* include/dlvhex2/Printer.h: Likewise.
	* include/dlvhex2/Interpretation.h: Likewise.
	* include/dlvhex2/PredicateTable.h: Likewise.
	* include/dlvhex2/ExternalAtomTable.h: Likewise.
	* include/dlvhex2/OrdinaryAtomTable.h: Likewise.
	* src/DependencyGraph.cpp: Likewise.
	* src/Registry.cpp: Likewise.
	* src/SafetyChecker.cpp: Likewise.
	* src/ASPSolver_dlv.cpp: Likewise.
	* src/BaseModelGenerator.cpp: Likewise.
	* src/Printer.cpp: Likewise.
	* testsuite/TestTables.cpp: Likewise.
	* testsuite/TestDLVProcess.cpp: Likewise.

2012-03-05  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/Registry.cpp: Fixed bug in storeConstantTerm.

	* src/ProgramCtx.cpp: Fixed problem with duplicate atoms.

	* include/dlvhex2/PredicateMask.h: Safe copy constructor and assignment operator.
	* src/PredicateMask.cpp: Likewise.

	* include/dlvhex2/Registry.h: More comfort functions in registry.
	* src/Registry.cpp: Likewise.

	* testsuite/TestDLVProcess.cpp: New testcase (from Minh Dao-Tran).
	* testsuite/Makefile.am: Likewise.
	* testsuite/run_TestDLVProcess.sh: Likewise (workaround to make it work,
	should be solved properly but there is no documentation how to do it in boost).

2012-02-21  Christoph Redl   <redl@kr.tuwien.ac.at>

	* Merge trunk 3246-3554 into refactoring branch

2012-02-01  Peter Schueller  <ps@kr.tuwien.ac.at>

	* Makefile.am: Installing local bitmagic to safe location if using it,
	and setting up CFLAGS accordingly.
	* dlvhex2.pc.in: Likewise.
	* configure.ac: Likewise, and added AC_CACHE_SAVE checkpoints.
	* src/PluginContainer.cpp: Improved diagnostics for library loading.

2012-01-23  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex2/ComfortPluginInterface.h: Documentation.
	* include/dlvhex2/PluginInterface.h: Documentation.
	* README: Update.
	* TODO: Update.

2012-01-19  Peter Schueller  <ps@kr.tuwien.ac.at>

	Renaming all ".hpp" header files to ".h".

2012-01-18  Peter Schueller  <ps@kr.tuwien.ac.at>

	Moving all files from src/dlvhex/ to src/.

2012-01-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex2/PluginInterface.h: Added plugin versioning API
	(loadable modules usually do not have external version numbers)
	* src/dlvhex/PluginContainer.cpp: Implemented version check in
	library loading code.
	* testsuite/TestPlugin.cpp: Adapted test plugin to versioning API.
	* m4/dlvhex.m4: Likewise.

	* configure.ac: Preparing release (renaming binary and include
	directory to dlvhex2 to ensure coexistence with older version).
	* src/dlvhex/Makefile.am: Likewise, and revised library naming.
	* testsuite/Makefile.am: Likewise.
	* dlvhex2.pc.in: Likewise (renamed from dlvhex.pc.in).
	* dlvhex.pc.in: Likewise (remove).

	* include/dlvhex/Registry.hpp: Added storeRule() which checks
	if rule already exists in rule table and does not store duplicates.
	* include/dlvhex/RuleTable.hpp: Likewise.
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.
	* src/dlvhex/DependencyGraphFull.cpp: Likewise.
	* src/dlvhex/QueryPlugin.cpp: Likewise.
	* src/dlvhex/GuessAndCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/HigherOrderPlugin.cpp: Likewise.
	* src/dlvhex/BaseModelGenerator.cpp: Likewise.
	* src/dlvhex/MLPSolver.cpp: Likewise.
	* src/dlvhex/StrongNegationPlugin.cpp: Likewise.

	* src/dlvhex/ASPSolver.cpp: Splitting ASPSolver.cpp into solver
	backend specific compilation units.
	* src/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/ASPSolver_dlv.cpp: Likewise.
	* src/dlvhex/ASPSolver_libclingo.cpp: Likewise, and implemented
	threading for libclingo integration (similar to dlv threading).

	* include/dlvhex/ASPSolverManager.h: Making ASPProgram::idb a container instead
	of a reference (permits the caller to die without breaking the reference).
	* src/dlvhex/ASPSolver_libclingo.cpp: Implemented mask correctly (this fixes
	the GuessAndCheckModelBuilder together with libclingo).
	* src/dlvhex/ASPSolver_dlv.cpp: Added debugging messages.
	* examples/notwellfounded2.hex: Comment about solvability with clasp vs claspD.
	* examples/tests/higherorder5except.stderr: Making test clingo and dlv compatible.
	* examples/tests/libclingobackend.test.in: Added all original testcases for
	the libclingo backend, and gave reasons for each testcase deactivation.

2012-01-12  Peter Schueller  <ps@kr.tuwien.ac.at>

	* configure.ac: Using several configure switches for distcheck.

	* configure.ac: Extra tests if using --with-libclingo.
	* examples/Makefile.am: Likewise.
	* testsuite/Makefile.am: Likewise.
	* examples/tests/dlvhextests.test.in: Rename to basic.test.in.
	* examples/tests/basic.test.in: Collection of 'basic tests'.
	* examples/tests/libclingobackend.test.in: libclingo tests.

2012-01-11  Peter Schueller  <ps@kr.tuwien.ac.at>

	* configure.ac: Fixed wrong variable names.
	* include/dlvhex/Makefile.am: Fixed make distcheck.
	* examples/Makefile.am: Likewise.

	* include/dlvhex/Rule.hpp: Include guard fix.

	* m4/libcurl.m4: new upstream version from
	https://raw.github.com/bagder/curl/master/docs/libcurl/libcurl.m4
	* examples/tests/dlvhextests.test.in: Making dlvhextests.test a file built
	* examples/tests/dlvhextests.test: Likewise (remove).
	by configure.
	* configure.ac: Fixed some autoconf quoting warnings and replaced deprecated
	calls by other calls.

	* include/dlvhex/Interpretation.hpp: Added true-bit iteration interface.

	* include/dlvhex/ASPSolver.h: New method useInputProviderInput().
	* include/dlvhex/ASPSolverManager.h: Likewise.
	* src/dlvhex/ASPSolverManager.cpp: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.

	* include/dlvhex/Benchmarking.h: Mutex for profiling data.

	* include/dlvhex/ModelGenerator.hpp: Improved diagnosic messages.
	* src/dlvhex/WellfoundedModelGenerator.cpp: Likewise.
	* src/dlvhex/GuessAndCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/PlainModelGenerator.cpp: Likewise.

	* include/dlvhex/GraphvizHelpers.hpp: Improved graphviz escape functionality.
	* src/dlvhex/GraphvizHelpers.cpp: Likewise.

	* include/dlvhex/Configuration.hpp: New generic string options,
	methods getStringOption() and setStringOption().
	* src/dlvhex/Configuration.cpp: Likewise.

	* src/dlvhex/OrdinaryModelGenerator.cpp: Remove deprecated file.

	* include/dlvhex/EvalGraph.hpp: Dedicated evaluation graph graphviz
	printing functionality.

	Changed method of evaluation graph building: now evaluation units are
	created without modifying the component graph, this involves the
	following changes:
	* include/dlvhex/ComponentGraph.hpp: Made ComponentGraph clone()-able
	and deprecating collapseComponents() interface.
	* src/dlvhex/ComponentGraph.cpp: Likewise.
	* include/dlvhex/EvalGraphBuilder.hpp: New methods getComponentGraphRest()
	and calculateNewEvalUnitInfos() (previously in ComponentGraph in similar form)
	and changed functionality: now does not modify ComponentGraph for creating
	evaluation units.
	* src/dlvhex/EvalGraphBuilder.cpp: Likewise.
	* src/dlvhex/EvalHeuristicTrivial.cpp: Adapted to new method of eval graph
	building.
	* src/dlvhex/EvalHeuristicOldDlvhex.cpp: Likewise.
	* src/dlvhex/EvalHeuristicFromFile.cpp: Likewise.
	* src/dlvhex/EvalHeuristicEasy.cpp: Likewise (using deprecated ComponentGraph
	functionality).
	* testsuite/TestComponentGraph.cpp: No longer testing original component
	collapsing functionality.

	* include/dlvhex/EvalHeuristicASP.hpp: New evaluation heuristic
	that uses ASP to compute evaluation units from components.
	* src/dlvhex/EvalHeuristicASP.cpp: Likewise.
	* doc/extatom3.hex_evalplanfactinput.asp: Likewise (added sample input to ASP
	eval heuristics as a file).
	* examples/extatom3_evalplan.txt: Likewise (testcase).
	* examples/extatom3_aspheur_old.asp: Likewise (testcase).
	* examples/extatom3.hex: Likewise (testcase).
	* examples/extatom3_evalplana.txt: Likewise (testcase).
	* examples/extatom3_evalplanb.txt: Likewise (testcase).
	* examples/extatom3_aspheur_faultya.asp: Likewise (testcase).
	* examples/extatom3_aspheur_faultyb.asp: Likewise (testcase).
	* examples/tests/extatom3_faultya.stderr: Likewise (testcase).
	* examples/tests/extatom3_faultyb.stderr: Likewise (testcase).

	* include/dlvhex/EvalHeuristicShared.hpp: New base class for
	functionality that is shared among evaluation heuristics.
	(Currently topologicalSortComponents(), executeBuildCommands(),
	and related data types.)

	* include/dlvhex/DumpingEvalGraphBuilder.hpp: New evaluation graph
	builder which can dump the evaluation plan to a text file.
	* src/dlvhex/DumpingEvalGraphBuilder.cpp: Likewise.

	* src/dlvhex/dlvhex.cpp: Adapted to above changes, including new command
	line options to activate above features.
	* src/dlvhex/State.cpp: Likewise.
	* src/dlvhex/Makefile.am: Likewise.

	* testsuite/Makefile.am: Speeding up tests by using shared libraries built
	in src/dlvhex/ directory.

2011-12-18  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Add profiling support (--enable-profiling).

	* README: Explain boost compilation.

	* cheatsheet: Remove.

2011-11-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/SafetyChecker.cpp: Fixed bug in safety checker.
	* examples/agg4.hex: Added new testcase for aggregates to detect
	above safety checker bug.
	* examples/tests/agg4.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/Makefile.am: Likewise.

	* testsuite/Makefile.am: Only building test library for make check.

2011-11-12  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/DependencyGraph.cpp: Improved Error output and fixed bug.

2011-10-06  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/DLVresultParserDriver.cpp: Parsing one answer set at a time.

	* include/dlvhex/ConcurrentMessageQueueOwning.h: Added modified version of
	concurrent message queue from DMCS project.
	* include/dlvhex/Makefile.am: Likewise.

	* configure.ac: Added check and libraries for boost::threads.
	* src/dlvhex/Makefile.am: Likewise.
	* testsuite/Makefile.am: Likewise.

	* include/dlvhex/ASPSolverManager.h: New type of results container
	for asynchronous retrieval of answer sets using the message queue
	(class ConcurrentQueueResults).
	* src/dlvhex/ASPSolverManager.cpp: Likewise.

	* include/dlvhex/ASPSolver.h: Using asynchronous answer set
	retrieval in separate thread for DLV backend.
	* src/dlvhex/ASPSolver.cpp: Likewise.

	* examples/tests/dlvhextests.test: Activated testcase which verifies
	that the threading works (manyanswersets.hex).
	* examples/tests/README.txt: Likewise.
	* examples/Makefile.am: Likewise.

	* src/dlvhex/ProcessBuf.cpp: Making processes kill()-able.
	* src/dlvhex/DLVProcess.cpp: Likewise.
	* include/dlvhex/ProcessBuf.h: Likewise.
	* include/dlvhex/DLVProcess.h: Likewise.
	* include/dlvhex/Process.h: Likewise.

	* src/dlvhex/dlvhex.cpp: Removed redundant --num option. Fixed
	commandline argument correctness checking.

	* include/dlvhex/Table.hpp: Making tables thread-safe.
	* include/dlvhex/TermTable.hpp: Likewise.
	* include/dlvhex/OrdinaryAtomTable.hpp: Likewise.
	* include/dlvhex/ModuleTable.hpp: Likewise.
	* include/dlvhex/PredicateTable.hpp: Likewise.
	* include/dlvhex/RuleTable.hpp: Likewise.
	* include/dlvhex/ExternalAtomTable.hpp: Likewise.
	* include/dlvhex/AggregateAtomTable.hpp: Likewise.
	* include/dlvhex/BuiltinAtomTable.hpp: Likewise.
	* include/dlvhex/ModuleAtomTable.hpp: Likewise.

	* include/dlvhex/PredicateMask.hpp: Update mutex for PredicateMask.
	* include/dlvhex/Atoms.hpp: Likewise.
	* include/dlvhex/fwd.hpp: Likewise.
	* src/dlvhex/PredicateMask.cpp: Likewise.
	* src/dlvhex/Atoms.cpp: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.

2011-10-04  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/RuleTable.hpp: Fixing bug with duplicate rules.
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.

	* examples/duplicaterule.asp: New testcase with duplicate rules.
	* examples/tests/duplicaterule.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/Makefile.am: Likewise.

	* testsuite/TestOnlineModelBuilder.cpp: Using BOOST_TEST_MESSAGE instead
	of deprecated BOOST_MESSAGE (BOOST_MESSAGE no longer exists in boost trunk).
	* testsuite/TestEvalEndToEnd.cpp: Likewise.

2011-09-13  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/module-Even.mlp: Add different even encodings.
	* examples/module-Even2.mlp: Likewise.

2011-09-12  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/State.cpp: Fixing bug in changeState().
	* src/dlvhex/valgrinddlvhex.sh: Showing more backtrace levels.

2011-09-03  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* testsuite/TestHexParserModule.cpp: Use MLPSyntaxChecker instead
	of ModuleSyntaxChecker.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-09-02  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/OrdinaryAtomTable.hpp: Freed OrdinaryAtomTable from Instantiation indexing.
	* include/dlvhex/Atoms.hpp: Likewise.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* src/dlvhex/MLPSolver.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* include/dlvhex/MLPSyntaxChecker.hpp: Fixed problem posed by deleting ModuleSyntaxChecker.hpp.
	* src/dlvhex/MLPSyntaxChecker.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

	* include/dlvhex/ModuleSyntaxChecker.hpp: Separates ModuleSyntaxChecker.hpp into MLPSyntaxChekcer.hpp and MLPSyntaxChekcer.cpp.
	* include/dlvhex/MLPSyntaxChecker.hpp: Likewise.
	* include/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/MLPSyntaxChecker.cpp: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* testsuite/Makefile.am: Likewise.

2011-09-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/MLPSolver.cpp (printCallGraph): Fix clang FTBFS
	"variable length array of non-POD element type".

2011-09-01  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/Makefile.am (EXTRA_DIST): Add missing examples.

	* include/dlvhex/Makefile.am (pkginclude_HEADERS): Add Module.hpp,
	ModuleTable.hpp, ModuleAtomTable.hpp, MLPSolver.hpp,
	PredicateTable.hpp, ModuleSyntaxChecker.hpp, Predicate.hpp.

	* include/dlvhex/NamesTable.h: Remove.
	* include/dlvhex/Program.h: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/Term.cpp: Likewise.

	* configure.ac: Fix version.

	* NEWS: Update.

	* AUTHORS: Add Tri.

2011-09-01  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Separate MLPSolver.hpp and MLPSolver.cpp.
	* src/dlvhex/MLPSolver.cpp: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* include/dlvhex/OrdinaryAtomTable.hpp: Likewise.
	* testsuite/Makefile.am: Likewise.

	* src/dlvhex/ProgramCtx.cpp: Fix ProgramCtx.cpp, re-initialize edb and idb.

	* include/dlvhex/HexGrammar.h: Remove left-over code.
	* include/dlvhex/IDSetContainer.hpp: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.
	* src/dlvhex/HexGrammar.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.
	* testsuite/TestHexParser.cpp: Likewise.
	* testsuite/TestASPSolver.cpp: Likewise.

2011-08-29  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/EvalHeuristicFromFile.hpp: Added new evaluation heuristic
	that allows to specify component-collapse-plans in a file. (Added file.)
	* src/dlvhex/EvalHeuristicFromFile.cpp: Likewise. (Added file.)
	* include/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise. (Extended commandline option --heuristics.)
	* examples/extatom3_evalplan.txt: Likewise. (New testcase using the option.)

	* src/dlvhex/ComponentGraph.cpp: Added component index to graphviz output. (These
	indices are required in the new evaluation heuristic input format - see above.)
	* include/dlvhex/ComponentGraph.hpp: Likewise.

	* include/dlvhex/EvalHeuristicBase.hpp: Slightly changed evaluation heuristics interface.
	* include/dlvhex/EvalHeuristicEasy.hpp: Likewise.
	* include/dlvhex/EvalHeuristicTrivial.hpp: Likewise.
	* include/dlvhex/EvalHeuristicOldDlvhex.hpp: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/EvalHeuristicTrivial.cpp: Likewise.
	* src/dlvhex/EvalHeuristicEasy.cpp: Likewise.
	* src/dlvhex/EvalHeuristicOldDlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.
	* testsuite/TestEvalHeuristic.cpp: Likewise.
	* testsuite/TestPlainHEX.cpp: Likewise.
	* testsuite/TestEvalEndToEnd.cpp: Likewise.

	* src/dlvhex/GuessAndCheckModelGenerator.cpp: Fixed bug with inner and outer eatoms.

	* examples/Makefile.am: Likewise. (New evaluation heuristics, G&C fix.)
	* examples/extatom3.hex: Likewise. (...)
	* examples/tests/extatom3.out: Likewise.(...)
	* examples/tests/README.txt: Likewise.(...)
	* examples/tests/dlvhextests.test: Likewise.(...)

2011-08-26  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/HexGrammar.tcc: Optimized parsing condition.

	* include/dlvhex/HexGrammar.h: Correctly parsing module input list. Updated with the new parser. Working revision.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* src/dlvhex/HexGrammar.cpp: Likewise.
	* testsuite/TestHexParser.cpp: Likewise.
	* testsuite/TestHexParserModule.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-08-25  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleTable.hpp: Renaming predicates in module body (non-working revision, yet).
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* testsuite/TestHexParser.cpp: Likewise.

	* include/dlvhex/HexGrammar.h: Parsing module header (non-working revision, yet).
	* include/dlvhex/ModuleTable.hpp: Likewise.
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* testsuite/TestHexParser.cpp: Likewise.

	* include/dlvhex/HexGrammar.h: Parsing predicate. Differentiation between predicates and terms.
	* include/dlvhex/PredicateTable.hpp: Likewise.
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* include/dlvhex/Module.hpp: Likewise.

2011-08-25  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.tcc: Need to use hold[] directive for this special rule.

2011-08-24  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.h: Adding workaround for boost::spirit bug in 1.47.

2011-08-23  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexParserModule.hpp: Added missing virtual destructor.

2011-08-20  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.tcc: Removed expectation operator that interfered
	with strong negation plugin.
	* include/dlvhex/GraphvizHelpers.hpp: Improved graphviz output escaping (new file).
	* include/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/DependencyGraphFull.cpp: Likewise.
	* src/dlvhex/ComponentGraph.cpp: Likewise.

2011-08-17 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* cheatsheet: Cheatsheet for installing TD-MLP.

	* include/dlvhex/MLPSolver.hpp: Cleaning up.

2011-08-16 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleSyntaxChecker.hpp: Richer error messages.

2011-08-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/GuessAndCheckModelGenerator.cpp: Fixed TODO in G&C Model Generator.
	* src/dlvhex/State.cpp: Made warning message more precise.

2011-08-08 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/getFirstASData.sh: Get more detailed information for the first answer set found.

2011-08-06 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/avgScript-all.sh: Get average data (more detail information) from random program experiments.

2011-08-01  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/HigherOrderPlugin.cpp: Implemented Higher Order Plugin.
	* include/dlvhex/HigherOrderPlugin.hpp: Likewise.
	* examples/higherorder*.hex: Likewise (testcases).
	* examples/tests/higherorder*.*: Likewise (testcases).

2011-07-27  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/DependencyGraph.cpp: Fixing bug in dependency graph exposed
	by strong negation tests.
	* testsuite/TestDependencyGraph.cpp: New testcase to test dependency graph.

2011-07-26  Peter Schueller  <ps@kr.tuwien.ac.at>

	Summary of changes for going from version 1.7.X to version 2.Y:

	Most important changes:

	* Implemented Evaluation formalism with Evaluation Graph and Model Graph as
	described in the paper "Pushing Efficient Evaluation of HEX Programs by Modular
	Decomposition" by Thomas Eiter, Michael Fink, Giovambattista Ianni, Thomas
	Krennwallner, and Peter Schüller at LPNMR 2011.
	Currently implemented evaluation heuristics are "old" (old dlvhex behavior),
	"trivial" (keep all initial evaluation units, causes a lot of overhead), and
	"easy" (try to collapse evaluation units that are related). Heuristics are
	selectable with --heuristics.

	* Implemented incremental model generation (one model at a time).

	* Entities are now managed using 64bit integers (class dlvhex::ID) and an
	entity registry where all constants, rules, ... are registered.

	* Query Support:
	Queries are now supported as an 'internal' plugin (use --query-enable),
	namely ground and nonground queries as in DLV, support for displaying all
	witnesses, and for incremental cautious nonground querying. External atoms
	are currently not supported in queries.

	* Strong Negation is now implemented as an internal plugin and has to be
	activated using --strongnegation-enable (see also strong negation testcases).

	* Higher Order is now implemented as an internal plugin and has to be
	activated using --higherorder-enable (see also higher order testcases).
	Using the higher order mode is discouraged, please formulate your higher order
	programs just as you would formulate any metaprogram, this way the program can
	be much more efficient than an automatic plugin could be. (Higher order mode
	requires strong safety checking to be disabled until a weaker notion of strong
	safety is defined and implemented.)

	Plugin API changes:

	* Plugins must now return PluginAtomPtrs/PluginConverterPtrs/... that use
	a "deleter" compiled into the respective plugin (see PluginInterface.h)
	* New central auxiliary constant management method in Registry:
	getAuxiliaryConstantSymbol(), PluginAtom no longer manages its auxiliaries.
	* added comfortable "text-only no-registry-ID-trouble" (and slow) plugin
	interface ComfortPluginInterface.hpp.
	* Plugins may now provide an alternative HEX parser by overriding createParser().
	* Plugins may now extend the HEX parser using parser modules.
	* Plugins may now register "auxiliary printer callbacks" for printing certain auxiliaries.

	Testing and debugging additions:

	* New Logger component with log-levels, hierarchical indentation and
	NDEBUG-dependent logging.
	* Printhelpers.hpp utilities for comfortable printing of various boost
	and STL containers.
	* testsuite/run-dlvhex-tests.sh: Added possibility for negative testcases.
	(See comments in trunk/run-dlvhex-tests.sh for some documentation.)
	* testsuite/answerset_compare.py: New script for real set-comparison for
	verifying answer-sets (previously the order of answer sets mattered).
	* src/dlvhex/gdbdlvhex.sh: Added shellscript to use gdb with
	libtool-built uninstalled binary.
	* src/dlvhex/valgrinddlvhex.sh: Likewise for valgrind.
	* New testcase notwellfounded2.hex for guess and check model builder
	(should test minimality of disjunctions, this test crashes dlvhex trunk/)

	Other (smaller) additions:

	* Prototype support for clingo as backend ASP solver (aggregates and some
	builtins probably do not work correctly yet - please file a Trac issue or
	drop the maintainers an email if you need some feature).
	* Added static linking test for testsuite TestPlugin.
	* Added commandline option for keeping auxiliary predicates in output.
	* Added commandline option for omitting EDB facts from output.
	* Added commandline option for configuring graphviz output. (Eval/model
	graph are not yet fully implemented but partially exists in testcases.)
	* External atoms may now appear in aggregates (this was partially
	forbidden and incorrectly implemented for the other cases in dlvhex
	1.x), see also new testcase examples/agg3.hex.
	* Added central auxiliary constant management method to Registry:
	getAuxiliaryConstantSymbol(), PluginAtom no longer manages its auxiliaries.
	* State machine for dlvhex implementation now features states that may be
	implicitly skipped (= optional states).
	* Prefixing --plugindir argument with ! resets the search path (also de-
	activating LD_LIBRARY_PATH for the plugin library search).

	Temporarily removed functionality:

	* removed RuleMLOutputBuilder as it was a hack, most probably no longer
	works correctly, and can (and should) be realized as a plugin.
	* removed --dlt option as it can (and should) be realized as a plugin.
	* Predicate inputs of external atoms no longer may be variables, this was
	possible in dlvhex 1.x but it was incorrectly implemented (see example
	variable_input_predicates.hex example in trunk/) and we need a new
	implementation strategy for doing that. This change causes the changes to
	extatom5.hex and extatom6.hex testcases.
	* Weak constraints are currenty not implemented, as there are plans to
	implement them in a more efficient way than previously done. Therefore
	weak testcases have been deactivated:
	../weak1.hex weak1.out -a
	../weak1.hex weak1r.out -ra
	../weak2.hex weak2.out -a
	../msp.hex msp.out -a
	* Namespaces are currently not implemented, as they will be implemented
	as a plugin. Therefore namespace testcases have been deactivated:
	../namespace1.hex namespace1.out
	../namespace2.hex namespace2.out

	Removed functionality:

	* removed --reverse option as it was not implemented and not documented.

	Internal structural changes:

	* Class Globals was renamed to Configuration and is no longer a
	singleton (each ProgramCtx may have its own config if dlvhex is used as a
	library).
	* Input sources (including URL inputs) are now encapsulated in the
	InputProvider objects.
	* Class PluginContainer is no longer a singleton as API users might have
	different programs with different plugin containers.
	* The testsuite no longer uses CPPUnit, it now uses the boost
	unit-testing framework (boost UTF).
	* The testsuite was moved from src/dlvhex/testsuite/ to testsuite/.
	* Plugins must now return PluginAtomPtrs/PluginConverterPtrs/... that use
	a "deleter" compiled into the respective plugin (see PluginInterface.h)
	* No longer using -nofact for external dlv solver because we sometimes
	need to keep facts and we never want derived facts that are present in
	the EDB to "reappear".

2011-07-26  Peter Schueller  <ps@kr.tuwien.ac.at>

	* TODO: Update.

2011-07-23 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Fixed largest bottom.

2011-07-22 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Log time analysis.

	* generator/createBigEvenOdd.sh: Create a big benchmarks for Even-Odd program.

	* include/dlvhex/MLPSolver.hpp: Tests for -n and --split.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/module-EvenOdd-n1.out: Likewise.

2011-07-13  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* README: Update.

2011-06-27 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>
	
	* testsuite/TestHexParserModule.cpp: Relative path for examples.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* testsuite/Makefile.am: Fixed include directory of external solver.

2011-06-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* testsuite/TestMLPSolver.cpp: Removed some hard-coded relative
	paths, missing bits and pieces are for Tri to fix.


2011-06-18  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* testsuite/Makefile.am: Create libhex.a and libhexND.a to reduce
	compile-time by 33%. Can be further improved by compiling
	$(top_srcdir)/src/dlvhex/lib{X,Y,Z}.a.

	* README: Small fixes.

	* src/dlvhex/Makefile.am (dlvhex_LDADD): Move @LIBCURL@ to the
	end of the list, linux i386 linker is sensitive to this.

	* configure.ac: Fix messages.

	* examples/tests/query_hex_ground1ca.stdout: Remove whitespace in
	wc output. (ticket #46)

2011-06-17 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestMLPSolver.cpp: Test different available solver.

	* include/dlvhex/MLPSolver.hpp: Not always assuming clingo.

2011-06-16 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Incorporating libclingo as the backend solver.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.

	* src/dlvhex/dlvhex.cpp: Bugfix for libclingo.

	* include/dlvhex/MLPSolver.hpp: Collecting the largest bottom and turned off some log-printings.

2011-06-07 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Minimize branching in the beginning.

2011-06-07 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Finishing Instantiation splitting.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

2011-06-06 Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Implementing instantiation splitting: using Top data structure.

	* include/dlvhex/MLPSolver.hpp: Implement collecting the largest bottom.


2011-05-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Check for g++ >= 4.3.

2011-05-18  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Fix a little bug in printing M. 

2011-05-17  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/Benchmark-Summary.zip: Delete old benchmark files.
	* generator/Benchmark-Stats.zip: Likewise.
	* generator/Benchmark-Module.zip: Likewise.

2011-05-13  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/forLatex.sh: Fix a small bug about opt.

2011-05-12  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/forLatex.sh: Automatic latex table generation. 

	* generator/summaryAT.sh: Detect additional message for mem-out.

2011-05-07  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/Module.cpp: Smarter random arity predicate.

2011-05-06  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/genTopologyCore.sh: Adding a new big parameter setting.

	* generator/runScriptAT.sh: Automatically kill left-over dlv.

	* generator/Module.cpp: Incorporating higher arity predicate.

	* include/dlvhex/MLPSolver.hpp: Fixing some bug when print some interpretation.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-05-02  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/summaryAT.sh: Handle time-out and mem-out.
	* generator/summaryStatsAT.sh: Likewise.

	* generator/stats.awk: Fixed standard deviation computation when handling one entry.

	* generator/runScriptET.sh: Fixing the prompted message.
	* generator/summaryAT.sh: Likewise.

	* generator/genTopologyCore.sh: Create a new, bigger testsuite.

	* generator/runScriptAT.sh: Change memory limit up to 2Gb.

2011-04-29  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/genTopologyCore.sh: Fixing the prompted message.
	* generator/runScriptAT.sh: Likewise.
	* generator/runScriptET.sh: Likewise.
	* generator/summaryAT.sh: Likewise.

	* generator/runScriptAT.sh: Adding interactive dialog if the result dir is exist.
	* generator/genTopologyCore.sh: Likewise.
	* generator/summaryAT.sh: Likewise.
	* generator/runScriptET.sh: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing some references.

2011-04-28  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Adding functional time information and fixing some references.

2011-04-27  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/Benchmark-Module.zip: Adding benchmark files.
	* generator/Benchmark-Stats.zip: Likewise.
	* generator/Benchmark-Summary.zip: Likewise.


	* generator/runScriptAT.sh: Put command as the 1st param.
	* generator/runScriptET.sh: Likewise.

2011-04-26  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/genTopologyCore.sh: Fixing bug in creating result directory.

	* generator/plotting.sh: Generate plotting time data for a parameter setting.

	* generator/summaryAT.sh: Create summary information for all topology.
	* generator/summaryStatsAT.sh: Likewise.

	* generator/runScriptAT.sh: Run benchmark for all topology.

	* generator/genParameterSetting.sh: Adding comments.
	* generator/genTopology.sh: Likewise.
	* generator/summaryET.sh: Likewise.
	* generator/summaryStatsET.sh: Likewise.
	* generator/runScriptET.sh: Likewise.

	* generator/genTopologyCore.sh: Adding looping on constant, generate for all topology.

	* generator/summaryET.sh: Adding comments.
	* generator/runScriptET.sh: Likewise.

	* generator/plotting.sh: Create plotting data for gnuplot.

	* generator/summaryStatsET.sh: Creating statistical information from summary.
	* generator/stats.awk: Likewise.

2011-04-25  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/summaryET.sh: Create file summary for each parameter setting.

	* generator/runScriptET.sh: Run benchmark for a topology.

	* generator/genTopologyCore.sh: Renaming from generator/genExampleCore.sh.

	* generator/genTopology.sh: Renaming from generator/genExample.sh.

	* include/dlvhex/MLPSolver.hpp: Add option --forget (forgetting instantiation)
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

2011-04-24  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/genExampleCore.sh: Generate 'interesting' examples.

2011-04-23  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/genParameterSetting.sh: Generate a complete benchmark suite for a topology.
	* generator/genExample.sh: Likewise.

	* generator/Module.cpp: Use numModules instead of numDiamond in Diamond topology.

	* include/dlvhex/MLPSolver.hpp: Choose the fastest dataset for A (using vector only).

	* generator/gen.sh: Adding Tree topology.
	* generator/Module.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Adding #callToDLV and #ASFromDLV information.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-04-22  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/Module.cpp: Introducing at most instead of exactly for parameters + formal input more than one predicate.

	* include/dlvhex/MLPSolver.hpp: Including time information in STATS.

	* include/dlvhex/RuleTable.hpp: To not insert previously existed rule.

2011-04-20  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Put data structure for A in a separate file.
	* include/dlvhex/IDSetContainer.hpp: Likewise.

2011-04-18  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Fixed stats printing information.

2011-04-16  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Optimize instantiation information: store it on ogatoms, delete MFlag.
	* include/dlvhex/OrdinaryAtomTable.hpp: Likewise.
	* include/dlvhex/Atoms.hpp: Likewise.
	* include/dlvhex/ID.hpp: Likewise.
	* include/dlvhex/Module.hpp: Likewise.
	* include/dlvhex/Table.hpp: Likewise.

2011-04-15  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/Atoms.hpp: Store actual module name on the module atom.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Store the same rule only once.

	* include/dlvhex/RuleTable.hpp: Adding hashed index to the RuleTable.

2011-04-13  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/gen.sh: Adding diamond and random topology.
	* generator/Module.cpp: Likewise.
	* generator/makefile: Likewise.

	* include/dlvhex/MLPSolver.hpp: Use registry for solve() rather than ctx.

	* include/dlvhex/Logger.hpp: Printing additional statistical information.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* generator/gen.sh: Likewise.

2011-04-12  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/gen.sh: Implement a more general script to generate examples.

	* generator/Module.cpp: Generate example for line, star, and ring topology.
	* generator/makefile: Likewise.

2011-04-11  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Optimization on ASPSolver object and printing information.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

	* examples/module-Complex.mlp: Adding an example for a more complex module call.

2011-04-06  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* generator/ModuleStar.cpp: Generate examples of star topology.
	* generator/makefile: Likewise.
	* generator/gen.sh: Likewise.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Adapting terms and preds to mlp or not mlp.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Put atom with second order variable in onatoms.

	* include/dlvhex/MLPSolver.hpp: Refactoring stack, store only once for each answer set result.
	* testsuite/TestMLPSolver.cpp: Likewise.
	* examples/tests/module-EvenOddTwoMain.out: Likewise.
	* examples/tests/module-EvenOdd.out: Likewise.

	* src/dlvhex/dlvhex.cpp: Modify --n to --num

2011-04-04  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Extend run-dlvhex-tests to work on mlp test suite.
	* testsuite/TestMLPSolver.cpp: Likewise.
	* examples/module-EvenOddTwoCalls1.mlp: Likewise.
	* examples/module-EvenOddTwoCalls2.mlp: Likewise.
	* examples/module-EvenOdd.mlp: Likewise.
	* examples/tests/module-Hanoi.out: Likewise.
	* examples/tests/module-EvenOddTwoMain.out: Likewise.
	* examples/tests/module-ABBA.out: Likewise.
	* examples/tests/module-Disjunction.out: Likewise.
	* examples/tests/module-Reachability.out: Likewise.
	* examples/tests/module-Cardinality.out: Likewise.
	* examples/tests/module-Negation.out: Likewise.
	* examples/tests/module-Complex.out: Likewise.
	* examples/tests/module-Indirection.out: Likewise.
	* examples/tests/module-EvenOddTwoCalls1.out: Likewise.
	* examples/tests/module-EvenOddTwoCalls2.out: Likewise.
	* examples/tests/module-Not-ic-Stratified.stderr: Likewise.
	* examples/tests/module-i-Stratified-2.out: Likewise.
	* examples/tests/module-EvenOdd.out: Likewise.
	* examples/tests/module-i-Stratified.out: Likewise.
	* examples/tests/module-Cs.out: Likewise.
	* examples/tests/module-AFin.out: Likewise.
	* examples/tests/module-Inconsistent.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/module-EvenOddTwoMain.mlp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Optimizing on how to store module instantiations.

	* include/dlvhex/MLPSolver.hpp: Optimize setMFlag

2011-04-03  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Clean up useless log information.

2011-03-31  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Fixing bug in storing registry, now memory-wise optimized.
	* include/dlvhex/Interpretation.hpp: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/Interpretation.cpp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-03-26  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Hashing the Interpretation.
	* include/dlvhex/Interpretation.hpp: Likewise.
	* src/dlvhex/Interpretation.cpp: Likewise.

	* src/dlvhex/postpross.sh: Adding post-processing script for call-graph output and answer set.

	* include/dlvhex/MLPSolver.hpp: Fixed some printing information for post-processing.

2011-03-25  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestHexParserModule.cpp: Change examples extension to *.mlp.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Remove parameter in solve(), remove deprecated code, move printing method in the end.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Print log information and call graph in verbose level 2.

2011-03-24  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Adding option --n to restrict the number of answer sets returned.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-03-22  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Adding function to easily print idb.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-03-19  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestMLPSolver.cpp: Add test cases for i-stratified program and print, also print the log and graphviz output.
	* examples/module-i-Stratified-2.mlp: Likewise.
	* examples/module-i-Stratified.mlp: Likewise.

	* examples/module-Not-ic-Stratified.hex: Modified to not-i-stratified.

	* include/dlvhex/MLPSolver.hpp: Modified the solver to solve an i-stratified program.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Impose an exception for a duplicate module name.

	* testsuite/TestMLPSolver.cpp: Adding a test case for C contains more than one element when enter comp().
	* examples/module-Cs.hex: Likewise.

	* include/dlvhex/MLPSolver.hpp: Updating the answer set counter printing.

2011-03-18  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestMLPSolver.cpp: Adding a test case to add (and retrieve) fin from A.
	* examples/module-AFin.hex: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing bug in setting fin to A and print useful information into a log file.

2011-03-17  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Fixing bug in smallest ILL.
	* include/dlvhex/Logger.hpp: Likewise.

	* testsuite/TestMLPSolver.cpp: Adding a test case for indirect rule to collect the bottom.
	* examples/module-Indirection.hex: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing bug in collecting bottom.

	* include/dlvhex/ModuleSyntaxChecker.hpp: Allowing empty predicate inputs.

2011-03-15  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/Logger.hpp: Fixed some logging information
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.

	* testsuite/TestMLPSolver.cpp: Add tower of hanoi examples.
	* examples/module-Hanoi.hex: Likewise.

	* include/dlvhex/MLPSolver.hpp: Producing call graph.

	* testsuite/TestHexParserModule.cpp: Completing the test cases with throw requirement.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing bug in collecting Answer Set.

2011-03-13  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/Logger.hpp: Introducing MLPSolver state into dlvhex.
	* include/dlvhex/State.h: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Throw an exception on not ic stratified program.

	* include/dlvhex/ModuleSyntaxChecker.hpp: Throw an exception on syntax check error.

	* include/dlvhex/ModuleSyntaxChecker.hpp: First approach to incorporate MLPSolver into dlvhex.
	* include/dlvhex/State.h: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

2011-03-12  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Printing AS result without prefix.
	* include/dlvhex/Printer.hpp: Likewise.
	* include/dlvhex/Interpretation.hpp: Likewise.
	* include/dlvhex/Module.hpp: Likewise.
	* include/dlvhex/Logger.hpp: Likewise.
	* src/dlvhex/Interpretation.cpp: Likewise.
	* src/dlvhex/Printer.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* testsuite/TestMLPSolver.cpp: Fixed some testcases.

	* src/dlvhex/dlvhex.cpp: Adding option --mlp.

	* include/dlvhex/MLPSolver.hpp: Fixed output formatting, minus eliminating prefix.

2011-03-11  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestMLPSolver.cpp: Adding more examples about disjunctive and naf
	* examples/module-ABBA.hex: Likewise.
	* examples/module-Disjunction.hex: Likewise.
	* examples/module-Negation.hex: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing bug about naf in replacedModuleAtoms

2011-03-08  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Converted comp from recursion into loop.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* testsuite/TestMLPSolver.cpp: Adding an example about how to compare the cardinality between sets.
	* examples/module-Cardinality.hex: Likewise.

2011-03-07  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/PredicateTable.hpp: Output the answer set in a new format.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/Interpretation.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Adding S in the instantiation, remove T from M (before call instatiation).
	* testsuite/TestMLPSolver.cpp: Likewise.

	* testsuite/TestMLPSolver.cpp: Adding an example about reachability and test non-ground module atom.
	* examples/module-Reachability.hex: Likewise.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Fixing bug in storing predicate arity and user_pred_tuple.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Fixing bug in storing module atom.

	* testsuite/TestMLPSolver.cpp: Adding test cases for more than one module call in one module.
	* examples/module1-Two.hex: Likewise.
	* examples/module2-Two.hex: Likewise.

2011-03-05  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/Logger.hpp: Cleaning some printing Information.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* testsuite/TestMLPSolver.cpp: Adding more testcases.
	* examples/module-Inconsistent.hex: Likewise.
	* examples/module-Not-ic-Stratified.hex: Likewise.
	* examples/module1-Big.hex: Likewise.

	* include/dlvhex/MLPSolver.hpp: Giving return value whether ic-stratified or not.

	* src/dlvhex/Interpretation.cpp: print edb, one fact each line 

	* include/dlvhex/MLPSolver.hpp: fixing bug on finding the answer sets (because A is not reverted)

2011-03-04  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* examples/module1-MainModules.hex: Handling more than one main module.
	* include/dlvhex/MLPSolver.hpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing rewrite and completing the recursion.

2011-03-03  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: Completing rewrite.
	* include/dlvhex/Interpretation.hpp: Likewise.
	* include/dlvhex/ModuleAtomTable.hpp: Likewise.
	* src/dlvhex/Interpretation.cpp: Likewise.

	* include/dlvhex/ID.hpp: Adding kind to take out property rule modatoms.

	* include/dlvhex/MLPSolver.hpp: Finishing comp.
	* include/dlvhex/OrdinaryAtomTable.hpp: Likewise.
	* include/dlvhex/Interpretation.hpp: Likewise.


2011-03-02  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/Interpretation.hpp: adding setRegistry to Interpretation

2011-03-01  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleTable.hpp: Implement some helper function for part c.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* include/dlvhex/Interpretation.hpp: Likewise.

2011-02-28  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleSyntaxChecker.hpp: Fixing bug in the renaming output predicate module atom.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* testsuite/TestHexParserModule.cpp: Likewise.

	* include/dlvhex/ModuleSyntaxChecker.hpp: Implementing restriction and renaming.
	* include/dlvhex/Atoms.hpp: Likewise.
	* include/dlvhex/MLPSolver.hpp: Likewise.
	* include/dlvhex/ModuleAtomTable.hpp: Likewise.
	* include/dlvhex/Module.hpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

	* include/dlvhex/MLPSolver.hpp: Fixing bug in bottom.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: fixing renaming for the output predicate in the module atom.

	* testsuite/Makefile.am: fixing the test case for MLPSolver.

	* include/dlvhex/MLPSolver.hpp: implement bottom and ans.

2011-02-25  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestMLPSolver.cpp: updating comments.

	* include/dlvhex/MLPSolver.hpp: implement smallest ILL.

2011-02-23  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: implement rewrite.

	* include/dlvhex/ID.hpp: modified the ID for module atom, adapted to isOrdinaryAtom() method.
	* src/dlvhex/ID.cpp: Likewise.

2011-02-06  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: separated the method to mark the External rule and Module rule.

2011-02-05  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/MLPSolver.hpp: adding MLPSolver.
	* include/dlvhex/ModuleTable.hpp: Likewise.
	* include/dlvhex/ModuleSyntaxChecker.hpp: Likewise.
	* include/dlvhex/Registry.hpp: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.

	* example/module1.hex: modified example for mlp.

	* testsuite/Makefile.am: add test case for the MLP solver.
	* testsuite/TestHexParserModule.cpp: Likewise.
	* testsuite/TestMLPSolver.cpp: Likewise.

2011-01-31  Peter Schueller  <ps@kr.tuwien.ac.at>

	* examples/variable_predicate_inputs.hex: Added .hex file that demonstrates
	a foundational dependency graph deficiency in dlvhex 1.x that prohibits
	variables for predicate inputs in dlvhex 2.x.

2011-01-10  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/PluginContainer.cpp: More verbose plugin loading.

2010-12-31  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ProgramCtx.h: substitute edb and idb by edbList and idbList
	* src/dlvhex/HexParser.cpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* testsuite/TestHexParserModule.cpp: Likewise.

	* testsuite/Makefile.am: remove declaration of ModuleHeaderTable (old version)
	* include/dlvhex/ProgramCtx.h: Likewise.

	* src/dlvhex/ID.cpp: fixing how term predicate is printed

	* include/dlvhex/ModuleTable.hpp: new way of module syntax checking using new version of module table
	* include/dlvhex/ProgramCtx.h: Likewise.
	* include/dlvhex/Module.hpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* testsuite/TestHexParserModule.cpp: Likewise.

2010-12-30  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: change termz to terms
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.

2010-12-21  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ProgramCtx.h: include boost/functional/factory.hpp compiled

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: extend DLVresultParserDriver to support terms and preds table
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise
	* testsuite/TestASPSolver.cpp: Likewise

	* include/dlvhex/Module.hpp: adding module structure and module table 
	* include/dlvhex/ModuleTable.hpp: Likewise.
	* include/dlvhex/Predicate.hpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

2010-12-20  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/TermTable.hpp: separated term table and pred table 
	* include/dlvhex/HexGrammarPTToASTConverter.h: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/TestHexParserModule.cpp: Likewise.
	* src/dlvhex/ModuleSyntaxChecker.cpp: Likewise.
	* src/dlvhex/ID.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

	* include/dlvhex/ID.hpp: adding idb list, edb list, and predicate list 
	* include/dlvhex/ProgramCtx.h: Likewise.

	* include/dlvhex/ID.hpp: Separating predicate from term table 
	* include/dlvhex/Predicate.hpp: Likewise.
	* include/dlvhex/PredicateTable.hpp: Likewise.

2010-12-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/comments.hex: Add testcase for comment parsing.

2010-12-16  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/HexGrammarPTToASTConverter.cpp: change the way predicate namespaced
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.

2010-12-14  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleSyntaxChecker.h: adding method verifySyntax that take care all of the process of module syntax check
	* src/dlvhex/ModuleSyntaxChecker.cpp: adding method verifySyntax that take care all of the process of module syntax check 
	* testsuite/TestHexParserModule.cpp: Adding testcases and supported example files 
	* examples/module1.hex: Likewise.
	* examples/module2.hex: Likewise.
	* examples/module3.hex: Likewise.
	* examples/module1-DiffArity.hex: Likewise.
	* examples/module1-NotExist.hex: Likewise.
	* examples/module2-DiffArity.hex: Likewise.
 	* examples/module2-TooFew.hex: Likewise.
 	* examples/module2-TooMany.hex: Likewise.
	* examples/module3-DiffArity.hex: Likewise.
	* examples/module3-NotExist.hex: Likewise.
	* examples/module2-SwapArity.hex: Likewise.
	* examples/module3-SwapArity.hex: Likewise.

2010-12-10  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/SyntaxChecker.h: deleted
	* src/dlvhex/SyntaxChecker.cpp: deleted
	* include/dlvhex/ModuleSyntaxChecker.h: update from SyntaxChecker.h, verifying output predicate module call using outputAtom
	* src/dlvhex/ModuleSyntaxChecker.cpp: Likewise.
	* src/dlvhex/ModuleHeaderTable.cpp: change outputpredicate in ModuleAtom into outputAtom
	* include/dlvhex/State.h: change SyntaxCheckState into ModuleSyntaxCheckState, and syntaxCheck into ModuleSyntaxCheck
	* src/dlvhex/State.cpp: Likewise.
	* include/dlvhex/HexGrammarPTToASTConverter.h: fixing: namepace only for predicate, change module output into atom
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* include/dlvhex/HexGrammar.tcc: change ModOutput into atom
	* include/dlvhex/HexGrammar.h: Likewise.
	* src/dlvhex/Atoms.cpp: change the way module atom printed
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* testsuite/TestHexParserModule.cpp: change SyntaxChecker into ModuleSyntaxChecker

	* include/dlvhex/ProgramCtx.h: move mHT out of Registry, add SyntaxCheckState into State 
	* include/dlvhex/State.h: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

2010-12-09  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/SyntaxChecker.h (new addition): syntax checking mechanism for mlp 
	* src/dlvhex/SyntaxChecker.cpp (new addition): Likewise.
	* include/dlvhex/ModuleAtomTable.h: adding getSize() and getAllByAddress()
	* src/dlvhex/ModuleAtomTable.cpp: Likewise.
	* include/dlvhex/ProgramCtx.h: adding ModuleHeaderTable mHT in registry
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* include/dlvhex/ModuleHeaderTable.h: adding typedef, adding method getPredInputs and getModuleSet
	* src/dlvhex/ModuleHeaderTable.cpp: adding method getPredInputs and getModuleSet
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: adding namespacing in createTerm_Helper
	* src/dlvhex/TestHexParserModule.cpp: adding SyntaxChecker

2010-12-08  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* src/dlvhex/ModuleHeaderTable.cpp: implementing data structures for module
	* include/dlvhex/ModuleHeaderTable.h: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: storing module header, edb, and idb for each module
	* include/dlvhex/HexGrammarPTToASTConverter.h: Likewise.
	* testsuite/Makefile.am: adapting TestHexParserModule to ModuleHeaderTable

2010-12-03  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleSyntaxChecker.h: adding syntax checking for duplicating predicate input 
	* src/dlvhex/ModuleSyntaxChecker.cpp: Likewise.
	* testsuite/TestModuleSyntaxChecker.cpp: Likewise.
	* testsuite/Makefile.am: Likewise.

2010-11-30  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/ModuleSyntaxChecker.h: updating: retrieve predSet by sequenced
	* src/dlvhex/ModuleSyntaxChecker.cpp: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: fixing bug in detecting module header
	* testsuite/TestHexParserModule.cpp: updating test case for the syntax checker

	* include/dlvhex/ModuleSyntaxChecker.h: class for syntactic checking of modular logic programs
	* src/dlvhex/ModuleSyntaxChecker.cpp: class implementation for syntactic checking of modular logic programs
	* include/dlvhex/HexGrammarPTToASTConverter.h: incorporate syntactic checking of modular logic programs
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* testsuite/TestHexParserModule.cpp: update testing case for the syntactic checking of modular logic programs

2010-11-29  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>
	
	* src/dlvhex/ModuleSyntaxChecker.cpp: handle the syntactic checking of modular logic programs
	* Makefile.am: including ModuleSyntaxChecker.cpp

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: identifying the elements of module header
	* include/dlvhex/HexGrammar.h: adding tag to pred_decl and pred_list

2010-11-28  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* testsuite/TestHexParserModule.cpp: add a test case for the 'even' program which consists of 3 module 

2010-11-27  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>
	
	* src/dlvhex/TestHexParserModule.cpp: add module header test
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: add method if module header is found (doModuleHeader)
	* include/dlvhex/HexGrammarPTToASTConverter.h: add method if module header is found (doModuleHeader)

	* include/dlvhex/HexGrammar.tcc: allowing empty module inputs and module output with 0 arity
	* include/dlvhex/Atoms.hpp: fixing struct ModuleAtom
	* src/dlvhex/Atoms.cpp: fixing print output ModuleAtom
	* src/dlvhex/ProgramCtx.cpp: fixing print output ModuleAtom
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: updating createModAtomFromModAtom
	* testsuite/TestHexParserModule.cpp: updating test cases for module output

	* testsuite/TestHexParserModule.cpp: testing whether the module atom is registered
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: adding createModAtomFromModAtom
	* include/dlvhex/HexGrammarPTToASTConverter.h: Likewise.
	* include/dlvhex/ProgramCtx.h: registering module atoms
	* include/dlvhex/Atoms.hpp: add struct ModuleAtom
	* include/dlvhex/ModuleAtomTable.hpp: table for storing module atoms (copy paste from ExternalAtomTable with renaming)

2010-11-26  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* ID-Concept.txt: adding definition for module atom
	* include/dlvhex/ID.hpp: Likewise.
	* src/dlvhex/ID.hpp: Likewise.

	* include/dlvhex/HexGrammar.tcc: put Module atom in literal
	* testsuite/TestHexParserModule.cpp: test case for Module atom
	* Makefile.am: defining test: TestHexParserModule
	* Committed revision 2478.

	* testsuite/TestHexParserModule.cpp: adding test to parse module header

2010-11-22  Tri Kurniawan Wijaya  <trikurniawanwijaya@gmail.com>

	* include/dlvhex/HexGrammar.h: adding grammar for module atom
	* include/dlvhex/HexGrammar.tcc: Likewise.

2010-11-19  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Set error-limit to 5 for clang.
	* testsuite/Makefile.am: Likewise.

2010-11-05  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/Makefile.am (EXTRA_DIST): Add minimality and
	builtin_safety{1,2} test cases.

2010-10-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* NEWS: Update.

	* src/dlvhex/GuessCheckModelGenerator.cpp: Sanitize verbose output.
	* src/dlvhex/DLVProcess.cpp: Likewise.

	* src/dlvhex/GraphProcessor.cpp: Add minimality check for
	allLeavesResult before adding to resultModels (ticket #33).

	* examples/minimality.hex: New test for programs with headcycles (ticket #33).
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/minimality.out: Likewise.
	* src/testsuite/dlvhex/TestPlugin.cpp: Likewise.

2010-10-21  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/Makefile.am: Add builtin_safety2.hex for new DLV
	release 2010-10-14.
	* examples/builtin_safety1.hex: Likewise.
	* examples/builtin_safety2.hex: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/builtin_safety1.out: Likewise.
	* examples/tests/builtin_safety2.out: Likewise.

2010-10-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Release version 1.7.2.

	* configure.ac: Bump version to 1.7.2.

	* NEWS: Describe changes to 1.7.2.

2010-08-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/BoostComponentFinder.cpp: Applied the nice part of the
	clang diff (the one that does not deal with a clang bug).
	* Modelbuilding-Concept.txt: Thoughts on online vs offline and
	projected vs non projected model building.

2010-08-12  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/TestPlugin.cpp: Added testcases for newly
	discovered bugs (see also Trac issues #25 #25 #27).
	* examples/rec_agg_bug1.hex: Likewise.
	* examples/rec_agg_bug2.hex: Likewise.
	* examples/rec_agg_bug3.hex: Likewise.

2010-08-04  Peter Schueller  <ps@kr.tuwien.ac.at>

	* m4/boost.m4: Temporary fix for iostreams configure check for
	boost versions >=1.44.

2010-07-19  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

	* include/dlvhex/Makefile.am: Highlight which header file belongs
	to which library.

2010-07-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Release version 1.7.1.

	* configure.ac: Bump version to 1.7.1.

	* NEWS: Describe changes to 1.7.1.

	* MAINTAINER-README: Update.
	* README: Likewise.

2010-07-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* clang.diff: Added diff to make it build with clang (debug stream does
	not work, as boost::iostream currently does not work with clang, there
	are other strange issues)

2010-07-16  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Add some checks for BitMagic (configure
	--with-bmagic=local forces local installation).

2010-07-15  Peter Schueller  <ps@kr.tuwien.ac.at>

	* bm3.7.0/*: Added BitMagic library sources to tree
	(http://bmagic.sourceforge.net/).

2010-07-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Model.h: Initial draft.

2010-07-15  Peter Schueller  <ps@kr.tuwien.ac.at>

	* Table-Concept.txt: More comments.
	* Modelbuilding-Concept.txt: Started writing concept
	for model representation (and later model building).

2010-07-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* Table-Concept.txt: Add some comments.
	Orgmode.
	* ID-Concept.txt: Likewise.

2010-07-14  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/ASPSolverManager.h: Revised ASPSolver interface
	another time, allowing plugins to determine default dlvhex solver method.
	Added dlvdb ".typ" file support to dlvhex (now also usable for plugins).
	Removed DLVDBProcess, DLVProcess is a generic debugging-capable process.
	ASPSolverManager::SoftwareConfiguration is stored in ProgramCtx and
	determines dlvhex solver software usage and options.
	* include/dlvhex/ASPSolver.h: Likewise.
	* include/dlvhex/DLVProcess.h: Likewise.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* include/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/ASPSolverManager.cpp: Likewise.
	* src/dlvhex/ProcessBuf.cpp: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.
	* src/dlvhex/DLVProcess.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Likewise.
	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Likewise.
	* include/dlvhex/ASPSolver.tcc: Likewise (removed file).

2010-07-13  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Term.h: Update types of the primitives.
	* include/dlvhex/Atom.h: Likewise.

	* testsuite/TestTypes.cpp: Fix testsuite.
	* testsuite/Makefile.am: Likewise.

	* src/dlvhex/Makefile.am: Remove Atom.cpp and Term.cpp.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/Term.cpp: Likewise.

	* Makefile.am: Add TestTypes test in testsuite.
	* configure.ac: Likewise.
	* testsuite/TestTypes.cpp: Likewise.
	* testsuite/Makefile.am: Likewise.

	* include/dlvhex/Term.h: Add new primitive types for the new AST.
	* include/dlvhex/SymbolTable.h: Likewise.
	* include/dlvhex/AtomTable.h: Likewise.
	* include/dlvhex/Atom.h: Likewise.
	* include/dlvhex/Makefile.am: Likewise.

	* include/dlvhex/NamesTable.h: Remove.

2010-07-09  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* README: Update dependency description.
	* MAINTAINER-README: Likewise.

	* NEWS: Update list of user-visible changes.

2010-07-08  Peter Schueller  <ps@kr.tuwien.ac.at>

	* examples/tests/dlvhextests.test: Added testcases for recently
	solved bugs.
	* examples/equality.hex: Likewise.
	* examples/tests/equality.out: Likewise.
	* examples/builtin_safety.hex: Likewise.
	* examples/tests/builtin_safety.out: Likewise.
	* examples/Makefile.am: Likewise.

	* src/dlvhex/PrintVisitor.cpp: Fix #succ rewriting (ticket #12).
	* src/dlvhex/Atom.cpp: Likewise.

	* src/dlvhex/SafetyChecker.cpp: Fix +,* safety checking (ticket #11 #13).

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Fix == vs = as well
	as <> vs != builtin binary operator treatment (ticket #14).

2010-07-07  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/ASPSolver.h: Replaced ASPSolver classes by
	ASPSolverManager, which has an automatic mode (used by dlvhex) and
	manual possibilities to select the used solver software and options.
	This change yielded all the other fixes/changes below.
	* include/dlvhex/ASPSolver.tcc: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.

	* include/dlvhex/DLVProcess.h: Decoupled Process from Solver,
	now a process is created by ASPSolverManager and not by dlvhex itself,
	and more of the process' properties are configured by the Solver.
	* include/dlvhex/ProgramCtx.h: Likewise.
	* include/dlvhex/Process.h: Likewise.
	* src/dlvhex/DLVProcess.cpp: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

	* include/dlvhex/Literal.h: Literal, Atom, Rule, and Program now know
	whether they are Higher Order or not, Program knows whether it contains
	aggregates (this way the solver software can decide how each combination
	has to be treated).
	* include/dlvhex/Program.h: Likewise.
	* include/dlvhex/Rule.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/Atom.h: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/AggregateAtom.cpp: Likewise.
	* src/dlvhex/Literal.cpp: Likewise.

	* include/dlvhex/Atom.h: BuiltinPredicate: new unary constructor
	(#int was previously stored as Atom with special magic).
	New possibility to prefer infix vs prefix printing.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.
	* src/dlvhex/SafetyChecker.cpp: Likewise.

	* include/dlvhex/DLVresultParserDriver.h: Defaulting to FirstOrder
	parse mode, removed autodetect, removed coupling with dlvhex::Globals.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.

	* src/dlvhex/DLVresultParserDriver.cpp: Allowing to parse weak answer
	sets (returning just as normal answer sets, ignoring the weak information).

	* examples/tertop.hex: Made testcase higher order to ensure
	functionality of ternary operators together with higher order.
	* examples/tests/dlvhextests.test: Removed --firstorder options.
	* src/dlvhex/dlvhex.cpp: Phasing out --firstorder option.
	Better (less adhoc) handling of solver software selection.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Using new ASPSolverManager.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Likewise,
	and added dlvdb testcase.

	* include/dlvhex/SpiritDebugging.h: Added @todo.
	* src/dlvhex/ProcessBuf.cpp: Likewise.

2010-07-03  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/globals.h: Remove dependency on config.h.

	* include/dlvhex/ASPSolver.h: Remove dependency on config.h.
	(BaseASPSolver::doSolve): Add template method.
	* include/dlvhex/ASPSolver.tcc: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.

	* src/dlvhex/Makefile.am (libaspsolver_la_LDFLAGS): Bump
	version-info to 2:0:0.
	(libdlvhexbase_la_LDFLAGS): Bump version-info to 6:0:0.

2010-07-01  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am: Atom ABI change: bumping so-versions:
	(libdlvhexbase_la_LDFLAGS): Bump version-info to 6:0:1.
	(libaspsolver_la_LDFLAGS):  Bump version-info to 1:1:0.

	* src/dlvhex/Benchmarking.cpp: Add emacs local variables.

	* configure.ac: Added check for boost::date_time library.
	(CXXFLAGS): Turn on -W -Wall.

2010-07-01  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Added constructors for increasing parse
	efficiency (minimizing copying of Term objects).
	* src/dlvhex/Atom.cpp: Likewise.

	* src/dlvhex/DLVresultParserDriver.cpp: Rewrote DLVresultParserDriver
	using Spirit V2 (for performance reasons).

	* src/dlvhex/Term.cpp: Improving Term copy constructor efficiency,
	added possibility for benchmarking (counting Term constructor invocations).

	* include/dlvhex/ASPSolver.tcc: Using new benchmarking.
	* src/dlvhex/Component.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

	* include/dlvhex/Benchmarking.h: Replaced benchmarking by new
	more versatile benchmarking system (usable by plugins, even if
	dlvhex is not built with --enable-debug).
	* include/dlvhex/globals.h: Likewise.
	* include/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/Benchmarking.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/Makefile.am: Likewise.

2010-06-28  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* Makefile.am (AUTOMAKE_OPTIONS): Force automake >= 1.11.

2010-06-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* benchmarks/reviewers6-pureasp.dlv: Add benchmarks for 6, 7, and 8 submissions.
	* benchmarks/reviewers7-pureasp.dlv: Likewise.
	* benchmarks/reviewers8-pureasp.dlv: Likewise.
	* benchmarks/reviewers-pureasp.dlv: Likewise.

	* configure.ac: Sanitize AUTOMAKE_OPTIONS.
	* Makefile.am: Likewise.

2010-06-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Bump version to 2.0.0.
	Add compiler settings info.

2010-06-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* README: Update.
	* MAINTAINER-README: Likewise.

	* Makefile.am (uninstall-local): Fix make uninstall when no-one
	called make install-html.

2010-06-22  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Release version 1.7.0.

	* Makefile.am: Add support for make html and make install-html.

2010-06-21  Peter Schueller  <ps@kr.tuwien.ac.at>

	* testsuite/dlvhex/Makefile.am: Ensuring that testsuite uses
	the libraries that were built in the builddir.

2010-06-19  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: Add --version information.

	* src/dlvhex/PluginContainer.cpp (PluginContainer::importPlugins):
	Do not load duplicate plugins.

	* src/dlvhex/Makefile.am (dlvhex_LDFLAGS): Remove -static.

	* include/dlvhex/ASPSolver.tcc: Use @todo instead of TODO.

2010-06-18  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Update copyright information.

	* doxygen.cfg: Update doxygen configuration via doxygen -u.

	* src/dlvhex/PluginContainer.cpp (PluginContainer::findplugins):
	Prevent loading of libdlvhexbase, this caused nasty duplicate
	global variables.

	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Use singleton
	instance methods.
	* src/dlvhex/dlvhex.cpp: Likewise.

	* dlvhex.pc.in: Install libdlvhexbase and libaspsolver in $libdir.
	* src/dlvhex/Makefile.am: Likewise.

	* configure.ac: Better configuration output.

	* NEWS: Update.

	* include/dlvhex/Term.h: Make Term::names and Term::namespaces
	private.
	(Term::getNameSpaces,Term::getNames,Term::getAuxiliaryNames):
	Singleton instance methods for Term::namespaces, Term::names,
	Term::auxnames.
	* src/dlvhex/Term.cpp: Likewise.

2010-06-18  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h: New parameter for
	PluginAtom which allows to declare external atoms as nonmonotonic.
	* include/dlvhex/DependencyGraph.cpp: Selecting guess and check model
	generator for SCCs which contain nonmonotonic atoms (was: fixed point
	model generator, which led to wrong answer sets).
	* src/dlvhex/DependencyGraph.h: Likewise.

	* src/testsuite/dlvhex/TestPlugin.cpp: New nonmonotonic external atom
	for verifying the above bugfix.
	* examples/Makefile.am: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/nonmon_guess.hex: Likewise.
	* examples/nonmon_inc.hex: Likewise.
	* examples/nonmon_noloop.hex: Likewise.
	* examples/tests/nonmon_guess.out: Likewise.
	* examples/tests/nonmon_inc.out: Likewise.
	* examples/tests/nonmon_noloop.out: Likewise.

2010-06-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac (BOOST_REQUIRE): Require boost >= 1.41.

2010-06-14  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* NEWS: Update.

	* configure.ac:: Require autoconf >= 2.61.

	* m4/boost.m4: Updated to newest version of boost.m4 from
	http://github.com/tsuna/boost.m4.

2010-06-08  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/ProgramCtx.h: Fix const-pointer return type warnings.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

	* bootstrap.sh: Add sanity checks for the autotool commands.

	* AUTHORS: Add Peter to the list of authors.

2010-06-07  Matthias Steindl  <steindlmatthias@gmx.at>

	* AUTHORS: Add Peter & me to the list of authors.

2010-05-14  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/ASPSolver.h: Added ASPStringSolver, an ASPSolver which does
	not take a parsed EDB/IDB but a string as input.
	* src/dlvhex/ASPSolver.cpp: Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Testcase for above.

2010-04-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/Makefile.am (AUTOMAKE_OPTIONS): Remove.
	* src/dlvhex/Makefile.am: Likewise.
	* src/Makefile.am: Likewise.
	* include/testsuite/dlvhex/Makefile.am: Likewise.
	* include/testsuite/Makefile.am: Likewise.
	* include/dlvhex/Makefile.am: Likewise.
	* include/Makefile.am: Likewise.

2010-04-22  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/State.cpp (OutputState::output): Fix OutputBuilder state.

	Closes ticket #1.

2010-04-15  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: Added option --nocache and global option
	UseExtAtomCache connected to it.
	* src/dlvhex/EvaluateExtatom.cpp: Calling retrieveCached(...) instead
	of retrieve(...) if that global option is 1 (it is by default).
	* include/dlvhex/PluginInterface.h: Query: added operator< and made
	the interpretation a copy instead of a reference (required for cache).
	Added retrieveCached() function and query cache.
	* src/dlvhex/PluginInterface.cpp: Implemented retrieveCached(...).
	* include/dlvhex/BaseVisitor.h: Allowing to visit const objects.
	* include/dlvhex/PrintVisitor.h: Likewise.
	* include/dlvhex/Literal.h: Likewise.
	* include/dlvhex/AtomSet.h: Likewise.
	* include/dlvhex/Atom.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/AggregateAtom.h: Likewise.
	* include/dlvhex/Program.h: Likewise.
	* include/dlvhex/Rule.h: Likewise.
	* include/dlvhex/Repository.h: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/AggregateAtom.cpp: Likewise.
	* src/dlvhex/Literal.cpp: Likewise.
	* src/dlvhex/AtomSet.cpp: Likewise.

2010-03-15  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.tcc: Parser fix for NAF.
	* examples/Makefile.am: Added testcase for NAF parsing.
	* examples/naftest.hex: Likewise.
	* examples/tests/naftest.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.

2010-03-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/DLVresultParserDriver.cpp (appendFactFromPropFact):
	Remove NoPredicate assertion.

2010-02-16  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.tcc: Parser fix for operator <>.
	* examples/operators.hex: Testcase for operators <> and !=.
	* examples/Makefile.am: Likewise.
	* examples/tests/operators.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.

2010-01-11  Peter Schueller  <ps@kr.tuwien.ac.at>

	* m4/boost.m4: Fix for boost header version check (updated to
	newest version of boost.m4 from http://github.com/tsuna/boost.m4).

2010-01-06  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/Makefile.am: Installing one more header.
	* dlvhex/trunk/dlvhex.pc.in: Added bindir to packageconfig file.

2009-12-18  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/Makefile.am: Installing more headers.
	* src/dlvhex/Component.cpp: Fixing/improving verbose output.
	* src/dlvhex/DLVProcess.cpp: Likewise.

2009-10-28  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.h: Fixing bug with empty input.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* examples/empty.hex: Likewise.
	* examples/tests/empty.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.

2009-09-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* m4/boost.m4: Fix for autoconf 2.64 (see also
	http://lists.gnu.org/archive/html/bug-autoconf/2009-08/msg00054.html).

2009-09-02  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/Component.cpp: Clearing result bevore reevaluating
	component. This increases performance.

2009-09-01  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/GraphProcessor.cpp: Added/improved debug output.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* include/dlvhex/Atom.h: Added TODOs.

2009-08-28  Peter Schueller  <ps@kr.tuwien.ac.at>

	* examples/weak2.hex: Changing testcase s.t. ordering of
	answer sets with same weight no longer poses a problem.
	* examples/tests/weak2.out: Likewise.

2009-08-27  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexGrammar.tcc: Adding TODO.

	* examples/percentparser.hex: Adding testcase for % parsing.
	* examples/tests/percentparser.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/Makefile.am: Likewise.

	* examples/tests/weak2.out: Fixing ordering of answer sets.

2009-08-24  Peter Schueller  <ps@kr.tuwien.ac.at>

	* configure.ac: Requiring boost >= 1.37, as it contains the
	important fix https://svn.boost.org/trac/boost/changeset/49234
	to the position_iterator.

	* src/dlvhex/PluginContainer.cpp: Added output for plugin
	searching and loading in verbosity level 4.
	* include/dlvhex/globals.h: Likewise.
	* src/dlvhex/globals.cpp: Likewise.

2009-08-20  Peter Schueller  <ps@kr.tuwien.ac.at>

	In boost 1.36, the previously (mistakenly) bidirectional
	boost::spirit::position_iterator was changed into a forward
	iterator. This no longer allows to use boost::regex parsers.
	The multi_pass iterator adapter does not work well together
	with the position_iterator, so we can no longer use regex_p.
	* include/dlvhex/HexGrammar.h: Replacing regex_p by direct
	spirit parser constructions, including postprocessing (trim).
	* include/dlvhex/HexGrammar.tcc: Likewise.
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* configure.ac: No longer requiring/handling boost::regex.
	* src/dlvhex/Makefile.am: Likewise.
	* src/testsuite/dlvhex/Makefile.am: Likewise.

2009-07-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Fix AC_CONFIG_SUBDIRS bug, see also
	<https://gnunet.org/mantis/view.php?id=1340>.

	* m4/boost.m4: Applied a patch by Benoit Sigoure
	<tsuna@lrde.epita.fr> (boost.m4 maintainer) for the 'xgcc' bug.

2009-07-13  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/DLVresultParserDriver.cpp: Dumping dlv(db) result
	output in debugging verbosity level 4.
	* src/dlvhex/globals.cpp: Likewise.
	* include/dlvhex/globals.h: Likewise.

2009-07-09  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/HexParserDriver.h: Rewriting the parser using
	boost::spirit. Added functionality: ternary operators (prefix
	and infix notation), binary operators (prefix notation), and
	#succ. Fixes: #int handling (previously allowed in rule heads),
	Changed functionality: #namespace syntax (trailing dot).
	* include/dlvhex/DLVresultParserDriver.h: Likewise.
	* include/dlvhex/ParserDriver.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/AggregateAtom.h: Likewise.
	* src/dlvhex/HexParserDriver.cpp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/ParserDriver.cpp: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.
	* examples/maxint.hex: Likewise.
	* examples/tertop.hex: Likewise.
	* examples/namespace1.hex: Likewise.
	* examples/namespace2.hex: Likewise.
	* examples/tests/maxint.out: Likewise.
	* examples/tests/tertop.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* include/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* src/testsuite/dlvhex/Makefile.am: Likewise.
	* examples/Makefile.am: Likewise.
	* configure.ac: Likewise.

	* include/dlvhex/HexGrammar.h: Likewise (new file).
	* include/dlvhex/SpiritFilePositionNode.h: Likewise (new file).
	* include/dlvhex/HexGrammarPTToASTConverter.h: Likewise (new file).
	* include/dlvhex/HexGrammar.tcc: Likewise (new file).
	* include/dlvhex/SpiritDebugging.h: Likewise (new file).
	* src/dlvhex/HexGrammarPTToASTConverter.cpp: Likewise (new file).

	* include/dlvhex/HexFlexLexer.h: Likewise (removed file).
	* include/dlvhex/DLVresultFlexLexer.h: Likewise (removed file).
	* src/dlvhex/DLVresultScanner.lpp: Likewise (removed file).
	* src/dlvhex/HexParser.ypp: Likewise (removed file).
	* src/dlvhex/HexScanner.lpp: Likewise (removed file).
	* src/dlvhex/DLVresultParser.ypp: Likewise (removed file).

2009-07-04  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/ASPSolver.tcc: Pass #maxint line to DLV.

	* include/dlvhex/Atom.h: Fix noninitialized bools in protected
	constructor, which is used by BuiltinPredicate constructor.
	Add support for ternary builtin predicates (#succ).
	* src/dlvhex/Atom.cpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp (ExternalAtom::operator<): Fix
	comparison bug where external atoms have variables in both input-
	and output lists.

	* src/dlvhex/GraphBuilder.cpp: Add assertion for checking the
	iterators after calling std::equal_range.

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Remove deprecated Sets
	library.

2009-07-02  Peter Schueller  <ps@kr.tuwien.ac.at>

	* examples/maxint.hex: Verify correct handling of #maxint builtin.
	* examples/tests/maxint.out: Likewise.

	* examples/tertop.hex: Verify correct handling of ternary
	arithmetic predicates.
	* examples/tests/tertop.out: Likewise.

2009-06-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* m4/boost.m4: Update boost.m4 from http://repo.or.cz/w/boost.m4.git.
	(_BOOST_FIND_COMPILER_TAG): Add "-x$boost_cv_lib_tag" to
	$boost_cv_lib_tag, it seems that boost 1.39 uses "xgcc40" instead
	of "gcc40" in the library names.

2009-06-17  Peter Schueller  <ps@kr.tuwien.ac.at>

	* include/dlvhex/ParserDriver.h: Forward declaration for generated include
	file (allows to install ParserDriver.h without installing location.hh).
	* src/dlvhex/ParserDriver.cpp: Including location.hh only in this file.

2009-06-16  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/ASPsolverTest.cpp: Add test for nested ASP solver.

	* src/dlvhex/Makefile.am (libaspsolver_la_SOURCES): Add ASPSolver.cpp.

	* include/dlvhex/ASPSolver.h (ASPSolverComposite): New composite solver.
	(ASPFileSolver): New file solver.
	* include/dlvhex/ASPSolver.tcc: Likewise.
	* src/dlvhex/ASPSolver.cpp: Likewise.

2009-06-12  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Process.h (Process::spawn): Add spawn method with list of options.
	* include/dlvhex/DLVProcess.h (DLVProcess::spawn): Likewise.
	* src/dlvhex/DLVProcess.cpp (DLVProcess::spawn): Likewise

	* include/dlvhex/ASPSolver.h (BaseASPSolver::solve): Add solve method with list of options.
	(ASPSolver<Builder,Parser>::solve): Likewise.
	* include/dlvhex/ASPSolver.tcc (ASPSolver<Builder,Parser>::solve): Likewise.

	* src/testsuite/dlvhex/ASPsolverTest.cpp: Add test for ASP solver with list of options.

2009-05-05  Alessandra Martello  <a.martello@mat.unical.it>

	* src/dlvhex/State.cpp: Bag fixed. Bound the OutputBuilder created
	within a PluginInterface to the ProgramContext.

2009-04-07  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/dlvhex/HexParser.ypp: Zero arity: parsing "&ext", "&ext[]", "&ext[]()" and "&ext()".
	* src/testsuite/dlvhex/TestPlugin.cpp: Added two test atoms for zero arity testing.
	* examples/extatom9.hex: Testcase for zero arity predicate parsing and evaluation.
	* examples/tests/extatom9.out: Likewise.
	* examples/tests/dlvhextests.test: Likewise.

2009-04-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/PluginInterface.cpp (checkInputArity): Fix a segfault
	in case of empty inputType.

2009-04-06  Peter Schueller  <ps@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/Makefile.am: Linking in libcurl for
	testing.

	* src/dlvhex/Makefile.am: Linking tested modules into
	libdlvhexbase instead of the dlvhex binary.

2009-03-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GraphBuilder.cpp: Mark fresh auxiliary head AtomNodes as auxiliary.

	* include/dlvhex/AtomNode.h (AtomNode): Add setAux and isAux.
	* src/dlvhex/AtomNode.cpp: Likewise.

2009-01-28  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/DependencyGraph.cpp: Document code.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.

2009-01-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/TestPlugin.cpp (TestCAtom): Add &testC
	external atom.

	* examples/extatom8.hex: New unstratified testcase.

2008-12-12  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

2008-12-08  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

	* MAINTAINER-README: Add pkg-config to the list of dependencies.

	* include/dlvhex/DLVresultParserDriver.h: Move error message
	handling from the parser to the scanner.
	* src/dlvhex/DLVresultParser.ypp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.

	* include/dlvhex/ASPSolver.tcc: Provide better debug output in
	case of solver errors.
	* src/dlvhex/ProcessBuf.cpp: Likewise.

2008-12-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/ProcessBuf.cpp: g++ 4.3 introduced some backwards
	incompatibility <http://gcc.gnu.org/gcc-4.3/porting_to.html> for
	C-functions: #include cstring and cstdlib.
	* src/dlvhex/dlvhex.cpp: Likewise.

2008-11-13  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GuessCheckModelGenerator.cpp: Do not create guessing
	rules for already evaluated weakly connected external atoms inside
	of strongly connected components.

2008-08-08  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Process.h (Process::path,Process::commandline): New methods.
	* include/dlvhex/DLVProcess.h: Likewise.
	* src/dlvhex/DLVProcess.cpp: Likewise.

	* include/dlvhex/ASPSolver.tcc: Add the solver path to the error messages.

	* src/dlvhex/dlvhex.cpp: Issue an error if user specified
	--solver=dlvdb without compiled dlvdb support.

2008-07-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GraphProcessor.cpp (GraphProcessor::run): Optimize
	the dependency graph evaluation algorithm to speed up the
	processing of independent components.

	* include/dlvhex/AtomSet.h (multiplySets): Remove.
	* src/dlvhex/AtomSet.cpp: Likewise.

2008-07-08  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/DepGraphBuilder.h: Remove new dependency graph.
	* include/dlvhex/HexDepGraph.h: Likewise.
	* include/dlvhex/HexDepGraphBuilder.h: Likewise.
	* include/testsuite/dlvhex/DepGraphTest.h: Likewise.
	* src/testsuite/dlvhex/DepGraphTest.cpp: Likewise.
	* src/testsuite/dlvhex/Makefile.am: Likewise.

2008-07-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/SafetyChecker.cpp (StrongSafetyChecker): Fix checking
	of ground expansion-safe external atoms.

2008-06-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/Makefile.am (dlvhexTS_SOURCES): Add DepGraphTest.cpp.

	* include/dlvhex/DepGraphBuilder.h: New file.
	* include/dlvhex/HexDepGraph.h: Likewise.
	* include/dlvhex/HexDepGraphBuilder.h: Likewise.
	* include/testsuite/dlvhex/DepGraphTest.h: Likewise.
	* src/testsuite/dlvhex/DepGraphTest.cpp: Likewise.

2008-05-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

	* configure.ac: Always set -W -Wall.

	* src/dlvhex/GuessCheckModelGenerator.cpp: Add more debug output.

2008-05-14  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* NEWS: Update.
	* README: Likewise.
	* TODO: Likewise.

2008-05-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/TextOutputBuilder.cpp: Move lonely std::endl to the output builder.
	* src/dlvhex/dlvhex.cpp: Likewise.

	* include/dlvhex/globals.h: Fix DLVHEX_DEBUG preprocessor macros.

	* include/dlvhex/ASPSolver.tcc: Unify DLVHEX_DEBUG output.
	* src/dlvhex/Component.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

2008-05-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GuessCheckModelGenerator.cpp: Do not add negative
	literals in the translated guess-n-check rules for external atoms
	extensions.

2008-05-03  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Check for boost's iostreams library.

	* src/dlvhex/GraphProcessor.cpp (GraphProcessor::run): Bugfix --
	use std::set instead of std::vector for allLeavesResult.
	Sanitize code.

	* src/dlvhex/AtomSet.cpp (AtomSet::operator<): Sanitize code.

	* include/dlvhex/DLVProcess.h: Add support for dumping the
	intermediate programs sent to the ASP solver.
	* src/dlvhex/DLVProcess.cpp: Likewise.

2008-04-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/DLVresultParser.ypp: Allow multiline error messages
	from dlv(db).

2008-04-23  Alessandra Martello  <a.martello@mat.unical.it>

	* include/dlvhex/Makefile.am: Install Process.h, ProcessBuf.h,
	ProgramCtx.h, and DLVProcess.h.

	* src/dlvhex/DLVProcess.cpp: Use -ORdr- in dlvdb invocation.

2008-04-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/State.h (State::setupProgramCtx): New method.
	(SetupProgramCtxState): New state class.
	* src/dlvhex/State.cpp: Likewise.

	* include/dlvhex/ProgramCtx.h (ProgramCtx::setupProgramCtx): New state action.
	* src/dlvhex/ProgramCtx.cpp: Likewise.

	* include/dlvhex/PluginInterface.h (PluginInterface::setupProgramCtx):
	New method for the plugins as a last change to setup the
	ProgramCtx right before we start evaluating it.

	* src/dlvhex/DLVProcess.cpp (DLVDBProcess::spawn): Check if
	configure found dlvdb.

	* src/testsuite/dlvhex/ASPsolverTest.cpp: ASPSolver now never
	includes the EDB in the result.

	* src/dlvhex/dlvhex.cpp: Add support for DLVDBProcess.
	Add support for setting up the ProgramCtx in the plugins.

	* src/dlvhex/ProgramCtx.cpp: Use DLVProcess by default.

	* src/dlvhex/GuessCheckModelGenerator.cpp: Fix a bug in checking
	the compatible sets.

	* src/dlvhex/AtomSet.cpp (AtomSet::difference): Fix set difference.

	* include/dlvhex/Registry.h (Registry::storeAtom): Remove method.
	* src/dlvhex/DLVresultParser.ypp: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Likewise.

	* include/dlvhex/Makefile.am: Remove AtomFactory.
	* src/dlvhex/Makefile.am: Likewise.

	* include/dlvhex/DependencyGraph.h: Use ProgramCtx.
	* include/dlvhex/GraphProcessor.h: Likewise.
	* include/dlvhex/ModelGenerator.h: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

	* include/dlvhex/DLVProcess.h (DLVDBProcess): New class for dlvdb.
	* src/dlvhex/DLVProcess.cpp: Likewise.

	* include/dlvhex/Component.h: Declare PluginContainer.
	* src/dlvhex/Component.cpp: Likewise.

	* include/dlvhex/AtomFactory.h: Remove.
	* src/dlvhex/AtomFactory.cpp: Likewise.

	* include/dlvhex/AtomSet.h (AtomSet::AtomCompare::operator()): Add const qualifier.

2008-04-21  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/AtomFactory.cpp (AtomFactory::insert): Do not create
	unique AtomPtr.

	* src/dlvhex/dlvhex.cpp: Use ProgramCtx and its state machinery.

	* src/dlvhex/Component.cpp: Code cleanups.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/SafetyChecker.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

	* src/dlvhex/Makefile.am (dlvhex_SOURCES): Add ProgramCtx.cpp and
	State.cpp.

	* include/dlvhex/Makefile.am (noinst_HEADERS): Add ProgramCtx.h
	and State.h.

	* include/dlvhex/ProgramCtx.h: New file.
	* include/dlvhex/State.h: Likewise.
	* src/dlvhex/ProgramCtx.cpp: Likewise.
	* src/dlvhex/State.cpp: Likewise.

	* include/dlvhex/ModelGenerator.h: Remove ProgramBuilder.h.

	* include/dlvhex/GraphBuilder.h: Clean up interface.
	* include/dlvhex/ResultContainer.h: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.
	* src/dlvhex/ResultContainer.cpp: Likewise.

2008-04-18  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: Add --solver option.

	* configure.ac: Search for dlvdb.

	* include/dlvhex/DLVProcess.h: Add support for dlvdb.
	* include/dlvhex/Process.h: Likewise.
	* src/dlvhex/DLVProcess.cpp: Likewise.

	* include/dlvhex/ASPSolver.tcc: Fix error message.

	* include/testsuite/dlvhex/ASPsolverTest.h: Use new ASPSolver infrastructure.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Likewise.

	* src/dlvhex/FixpointModelGenerator.cpp: Use new ASPSolver
	infrastructure.
	Add more sanity checks.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.

	* include/dlvhex/ModelGenerator.h: Cleaned up ModelGenerator
	interface.

	* include/dlvhex/AtomSet.h: Add some const qualifiers to the
	interface.
	* src/dlvhex/AtomSet.cpp: Likewise.

	* include/dlvhex/ASPSolver.h: Rename ASPsolver.h.
	Generalize ASPSolver interface.
	* include/dlvhex/ASPSolver.tcc: Likewise.

	* include/dlvhex/ASPsolver.h: Remove.
	* include/dlvhex/ProgramBuilder.h: Likewise.
	* src/dlvhex/ASPsolver.cpp: Likewise.
	* src/dlvhex/ProgramBuilder.cpp: Likewise.

	* include/dlvhex/Process.h: New file.
	* include/dlvhex/DLVProcess.h: Likewise.
	* src/dlvhex/DLVProcess.cpp: Likewise.

	* include/dlvhex/ProcessBuf.h: Add some sanity checks.
	(ProcessBuf::open): Return pid or -1 in case of error.
	* src/dlvhex/ProcessBuf.cpp: Likewise.

	* src/dlvhex/Makefile.am (libaspsolver_la_SOURCES): Add DLVProcess.cpp.
	(libaspsolver_la_LDFLAGS): Bump version-info to 1:0:0.
	(libdlvhexbase_la_SOURCES): Remove ProgramBuilder.cpp.

	* include/dlvhex/Makefile.am (noinst_HEADERS): Add ASPSolver.tcc,
	DLVProcess.h, and Process.h.
	(pkginclude_HEADERS): Remove ProgramBuilder.h

	* src/dlvhex/Component.cpp: Remove ASPsolver.
	* src/dlvhex/DLVresultParser.ypp: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.

	* TODO: Update.

2008-04-08  Alessandra Martello  <a.martello@mat.unical.it>

	* include/dlvhex/Atom.h (Atom::setPredicate,Atom::setArgument): Add new setter methods.
	* src/dlvhex/Atom.cpp: Likewise.

2008-03-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/PluginContainer.cpp: Look for "libdlvhex" instead of
	"lib", otherwise we end up loading unrelated shared libraries.

2008-03-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: Use PluginConverter::createConverters
	instead of createConverter.

	* include/dlvhex/PluginInterface.h (PluginConverter::createConverters):
	New method.

2008-03-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Makefile.am: Install Registry.h.

2008-02-26  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

	* examples/dawg.hex: New testcase.

	* include/dlvhex/PrintVisitor.h (RawPrintVisitor): Add Rule* visit
	method for appending newlines.
	* src/dlvhex/PrintVisitor.cpp: Likewise.

2008-02-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/SafetyChecker.cpp: Fix a bug which mistakenly
	reported unsafe rules.

	* examples/Makefile.am: Add new testcase for unsafety bug.
	* examples/extatom6.hex: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/extatom6.out: Likewise.

2008-02-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GuessCheckModelGenerator.cpp: Use ASPsolver instead of FixpointModelGenerator.

	* include/dlvhex/HexParserDriver.h: Add missing AtomSet.h include.

	* include/dlvhex/BaseVisitor.h: Program is now visitable.
	Allow Visitors to alter the visited objects.
	* include/dlvhex/PrintVisitor.h: Likewise.
	* include/dlvhex/Program.h: Likewise.
	* include/dlvhex/Repository.h: Likewise.
	* src/dlvhex/Component.cpp: Likewise.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.

	* include/dlvhex/AggregateAtom.h: Remove const qualifier from the accept method.
	* include/dlvhex/Atom.h: Likewise.
	* include/dlvhex/AtomSet.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/Literal.h: Likewise.
	* include/dlvhex/ProgramBuilder.h: Likewise.
	* include/dlvhex/Rule.h: Likewise.
	* src/dlvhex/AggregateAtom.cpp: Likewise.
	* src/dlvhex/AnswerSet.cpp: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/AtomSet.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/Literal.cpp: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.
	* src/dlvhex/ProgramBuilder.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.

2008-02-21  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GuessCheckModelGenerator.cpp: Sanitize debug output.

	* src/dlvhex/TextOutputBuilder.cpp (TextOutputBuilder::buildResult):
	Fix bug when we have to output empty ResultContainers.

	* src/dlvhex/PluginContainer.cpp (PluginContainer::importPlugins):
	Print warnings for duplicate external atoms.

	* examples/Makefile.am: Add missing testcases.

2008-02-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* Makefile.am: Require automake >= 1.10.

	* src/dlvhex/Dependency.cpp: Use static_cast<> where appropriate.
	* src/dlvhex/GraphBuilder.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/SafetyChecker.cpp: Likewise.

	* include/dlvhex/ExternalAtom.h (ExternalAtom::equals): Remove.
	(ExternalAtom::operator<,ExternalAtom::operator==): Fix parameters.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* include/dlvhex/Atom.h (Atom::equals): Remove.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/NodeGraph.cpp: Likewise.

2008-02-19  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* NEWS: Update.

	* src/dlvhex/ExternalAtom.cpp (ExternalAtom::unifiesWith):
	Extatoms unifies with extatoms now.

	* src/dlvhex/Component.cpp (ExternalComponent::evaluate): Fix
	evaluation of EXTERNAL_AUX dependencies in nonground extatom inputs.

	* src/dlvhex/AtomNode.cpp: Small beautifiers.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.

	* src/dlvhex/Atom.cpp (Atom::isGround,Atom::unifiesWith): Simplify.

	* include/dlvhex/globals.h: Beautify DLVHEX_DEBUG and dlvhex timer.
	* src/dlvhex/ASPsolver.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.

	* examples/Makefile.am: Add missing testcase extatom5.hex.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/extatom5.out: Likewise.

2008-02-18  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GraphBuilder.cpp: Check input/output arities of ExternalAtoms.
	Dynamically create auxiliary extatom-input rules.

	* src/dlvhex/EvaluateExtatom.cpp: Code cleanups and documentation.

	* include/dlvhex/Rule.h (Rule::getFile): Interface fix.
	* src/dlvhex/Rule.cpp: Likewise.

	* include/dlvhex/ExternalAtom.h (ExternalAtom::setAuxPredicate): New method.
	(ExternalAtom::operator<): New method.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* examples/Makefile.am: Add new testcase.
	* examples/extatom5.hex: Likewise.

2008-02-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/ExternalAtom.h: Remove static external atom counter.
	External atoms now have simple replacement names (this breaks non-ground input).
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* include/dlvhex/EvaluateExtatom.h: Add documentation.

	* examples/Makefile.am: Add new testcase for replacementname bug.
	* examples/extatom4.hex: Likewise.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/extatom4.out: Likewise.

	* src/dlvhex/AtomNode.cpp: Replace todo hints by doxygen's @todo
	documentation.
	* src/dlvhex/BoostComponentFinder.cpp: Likewise.
	* src/dlvhex/Component.cpp: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Likewise.

	* src/dlvhex/ASPsolver.cpp: Add debugging output for verbose
	levels above 2.

	* include/dlvhex/HexParserDriver.h (HexParserDriver::getInputFilename):
	Return a reference instead of a copy.
	* src/dlvhex/HexParserDriver.cpp: Likewise.

2008-02-16  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Do not check for libboost-graph.
	Require autoconf 2.61 due to new boost.m4.

2008-02-12  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/GraphBuilder.cpp: Add dependencies from aggregate
	atoms to atoms occurring in the body of them (fixes agg2.hex).
	* examples/agg2.hex: Likewise.

	* TODO: Update.

2008-02-11  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: g++ 3.3 is unable to infer template types
	in boost::tokenizer.

	* include/dlvhex/Term.h: Fix doxygen docs.
	* include/dlvhex/URLBuf.h: Likewise.

	* doxygen.cfg: Extract static and private members.

	* README: Describe --with-boost and libcurl.

	* src/testsuite/dlvhex/Makefile.am (AM_CPPFLAGS): Add BOOST_CPPFLAGS.

2008-02-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/ComponentFinder.h: Fix doxygen doc.
	* include/dlvhex/DLVresultParserDriver.h: Likewise.
	* include/dlvhex/DependencyGraph.h: Likewise.
	* include/dlvhex/HexParserDriver.h: Likewise.
	* include/dlvhex/NamesTable.h: Likewise.
	* include/dlvhex/PluginInterface.h: Likewise.
	* include/dlvhex/ProcessBuf.h: Likewise.
	* include/dlvhex/ResultContainer.h: Likewise.
	* include/dlvhex/URLBuf.h: Likewise.
	* src/dlvhex/AtomFactory.cpp: Likewise.
	* src/dlvhex/AtomSet.cpp: Likewise.
	* src/dlvhex/EvaluateExtatom.cpp: Likewise.
	* src/dlvhex/NodeGraph.cpp: Likewise.

	* doxygen.cfg: Update doxygen configuration via doxygen -u.

	* dlvhex.pc.in: Add Description field.

	* configure.ac: Integrate new boost searching macros.
	Create doxygen documentation in the doc directory.
	Output configuration after configure invocation.

	* m4/boost.m4: Use boost.m4 from http://repo.or.cz/w/boost.m4.git.

	* src/dlvhex/Makefile.am: Integrate new boost searching macros.

2008-02-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Component.cpp (Component::isInComponent): Beautify.

	* examples/extatom3.hex: Fix doc.

	* src/dlvhex/dlvhex.cpp: Use new safety checkers.

	* src/dlvhex/SafetyChecker.cpp: Fix strong safety checker.
	Beautify API.
	Fixes #1885479.
	* include/dlvhex/SafetyChecker.h: Likewise.

2008-02-03  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/extatom3.hex: Fix testcase.

	* src/dlvhex/EvaluateExtatom.cpp (EvaluateExtatom::evaluate):
	Throw a PluginError if plugin returns tuples of different size
	than size of output list.

	* src/dlvhex/ExternalAtom.cpp (ExternalAtom::equals): Fix nonworking method.

	* src/dlvhex/GraphProcessor.cpp: Beautify debugging output.

	* include/dlvhex/NodeGraph.h: Clean up interface.
	* src/dlvhex/NodeGraph.cpp: Likewise.

2008-02-02  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/TestPlugin.cpp: &testA and &testB is now well-defined.

	* TODO: Update.

	* examples/agg2.hex: Typo.

	* examples/extatom3.hex: New file.

2008-02-01  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/EvaluateExtatom.h: Throw PluginError if we cannot
	find the PluginAtom in the PluginContainer.
	* include/dlvhex/GraphBuilder.h: Likewise.
	* src/dlvhex/EvaluateExtatom.cpp: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.

	* README: Update.

	* MAINTAINER-README: New file.

	* src/dlvhex/BoostComponentFinder.cpp: Fix graphviz output code.

	* src/dlvhex/AtomNode.cpp: Split AtomNode.{cpp,h} into {AtomNode,Dependency,NodeGraph}.{cpp,h}.
	* src/dlvhex/Dependency.cpp: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.

	* src/dlvhex/NodeGraph.cpp: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* include/dlvhex/AtomNode.h: Likewise.
	* include/dlvhex/Dependency.h: Likewise.
	* include/dlvhex/DependencyGraph.h: Likewise.
	* include/dlvhex/GraphBuilder.h: Likewise.

	* include/dlvhex/NodeGraph.h: Likewise.
	* include/dlvhex/Makefile.am: Likewise.

2008-01-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Atom.cpp: Use boost::tokenizer instead of helper::stringExplode.
	* src/dlvhex/dlvhex.cpp: Likewise.

	* include/dlvhex/Makefile.am: Remove helper.cpp and helper.h.
	* include/dlvhex/helper.h: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/ASPsolver.cpp: Likewise.
	* src/dlvhex/helper.cpp: Likewise.

2008-01-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* examples/agg2.hex: New testcase for aggregates and external atoms.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/agg2.out: Likewise.

2008-01-28  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/Makefile.am: Only compile testsuite if
	cppunit is installed.

	* configure.ac: Give better debug output when cppunit is not
	installed.

2008-01-26  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/EvaluateExtatom.cpp: Add sanity checks for answer
	tuples from plugin atoms.
	LGPLize source.

	* src/dlvhex/dlvhex.cpp: Fix default namespace replacment.
	LGPLize source.

	* include/dlvhex/ASPsolver.h: LGPLize source.
	* include/dlvhex/AggregateAtom.h: Likewise.
	* include/dlvhex/AnswerSet.h: Likewise.
	* include/dlvhex/Atom.h: Likewise.
	* include/dlvhex/AtomFactory.h: Likewise.
	* include/dlvhex/AtomNode.h: Likewise.
	* include/dlvhex/AtomSet.h: Likewise.
	* include/dlvhex/BaseVisitor.h: Likewise.
	* include/dlvhex/BoostComponentFinder.h: Likewise.
	* include/dlvhex/Component.h: Likewise.
	* include/dlvhex/ComponentFinder.h: Likewise.
	* include/dlvhex/DLVresultFlexLexer.h: Likewise.
	* include/dlvhex/DLVresultParserDriver.h: Likewise.
	* include/dlvhex/DependencyGraph.h: Likewise.
	* include/dlvhex/Error.h: Likewise.
	* include/dlvhex/EvaluateExtatom.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/GraphBuilder.h: Likewise.
	* include/dlvhex/GraphProcessor.h: Likewise.
	* include/dlvhex/HexFlexLexer.h: Likewise.
	* include/dlvhex/HexParserDriver.h: Likewise.
	* include/dlvhex/Literal.h: Likewise.
	* include/dlvhex/ModelGenerator.h: Likewise.
	* include/dlvhex/NamesTable.h: Likewise.
	* include/dlvhex/OutputBuilder.h: Likewise.
	* include/dlvhex/ParserDriver.h: Likewise.
	* include/dlvhex/PlatformDefinitions.h: Likewise.
	* include/dlvhex/PluginContainer.h: Likewise.
	* include/dlvhex/PluginInterface.h: Likewise.
	* include/dlvhex/PrintVisitor.h: Likewise.
	* include/dlvhex/ProcessBuf.h: Likewise.
	* include/dlvhex/Program.h: Likewise.
	* include/dlvhex/ProgramBuilder.h: Likewise.
	* include/dlvhex/Registry.h: Likewise.
	* include/dlvhex/Repository.h: Likewise.
	* include/dlvhex/ResultContainer.h: Likewise.
	* include/dlvhex/Rule.h: Likewise.
	* include/dlvhex/SafetyChecker.h: Likewise.
	* include/dlvhex/RuleMLOutputBuilder.h: Likewise.
	* include/dlvhex/Term.h: Likewise.
	* include/dlvhex/TextOutputBuilder.h: Likewise.
	* include/dlvhex/URLBuf.h: Likewise.
	* include/dlvhex/globals.h: Likewise.
	* include/dlvhex/helper.h: Likewise.
	* include/testsuite/dlvhex/ASPsolverTest.h: Likewise.
	* include/testsuite/dlvhex/TestGraphProcessor.h: Likewise.
	* include/testsuite/dlvhex/TypeTest.h: Likewise.
	* src/dlvhex/ASPsolver.cpp: Likewise.
	* src/dlvhex/AggregateAtom.cpp: Likewise.
	* src/dlvhex/AnswerSet.cpp: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/AtomFactory.cpp: Likewise.
	* src/dlvhex/AtomNode.cpp: Likewise.
	* src/dlvhex/AtomSet.cpp: Likewise.
	* src/dlvhex/BoostComponentFinder.cpp: Likewise.
	* src/dlvhex/Component.cpp: Likewise.
	* src/dlvhex/ComponentFinder.cpp: Likewise.
	* src/dlvhex/DLVresultParser.ypp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/Error.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* src/dlvhex/HexParserDriver.cpp: Likewise.
	* src/dlvhex/HexScanner.lpp: Likewise.
	* src/dlvhex/Literal.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/ParserDriver.cpp: Likewise.
	* src/dlvhex/PluginContainer.cpp: Likewise.
	* src/dlvhex/PluginInterface.cpp: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.
	* src/dlvhex/ProcessBuf.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/ProgramBuilder.cpp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.
	* src/dlvhex/Repository.cpp: Likewise.
	* src/dlvhex/ResultContainer.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/RuleMLOutputBuilder.cpp: Likewise.
	* src/dlvhex/SafetyChecker.cpp: Likewise.
	* src/dlvhex/Term.cpp: Likewise.
	* src/dlvhex/TextOutputBuilder.cpp: Likewise.
	* src/dlvhex/URLBuf.cpp: Likewise.
	* src/dlvhex/globals.cpp: Likewise.
	* src/dlvhex/helper.cpp: Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Likewise.
	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Likewise.
	* src/testsuite/dlvhex/TestPlugin.cpp: Likewise.
	* src/testsuite/dlvhex/TestSuite.cpp: Likewise.
	* src/testsuite/dlvhex/TypeTest.cpp: Likewise.
	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Likewise.

	* examples/namespace2.hex: New testcase for default namespace.
	* examples/tests/dlvhextests.test: Likewise.
	* examples/tests/namespace2.out: Likewise.

	* Makefile.am (AUTOMAKE_OPTIONS): Add check-news.

	* COPYING: New file.

	* COPYING.LESSER: New file.

2008-01-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: Use URLBuf for retrieving HTTP programs.

	* src/dlvhex/URLBuf.cpp: New file.
	* m4/libcurl.m4: Likewise.
	* include/dlvhex/URLBuf.h: Likewise.

	* include/dlvhex/Makefile.am: Add URLBuf.h.

	* src/dlvhex/Makefile.am: Add URLBuf.cpp.
	Link with libcurl.

	* configure.ac: Check for libcurl.

	* NEWS: Update.

2008-01-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp (insertNamespaces): Only replace namespace
	if QName follows XML's NCName.

2008-01-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/TestPlugin.cpp: Set plugin name.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Use PluginContainer singleton
	* src/dlvhex/dlvhex.cpp: Likewise.

	* include/dlvhex/PluginContainer.h: Singletonize PluginContainer.
	* src/dlvhex/PluginContainer.cpp: Likewise.

	* include/dlvhex/EvaluateExtatom.h: Improve documentation.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

2008-01-22  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Makefile.am: Add ResultContainer.h and AnswerSet.h to the Plugin API.

	* src/dlvhex/dlvhex.cpp: Import OutputBuilders from the plugins.

	* include/dlvhex/OutputBuilder.h: Add OutputBuilder to the Plugin API.
	Use ResultContainer.
	* include/dlvhex/RuleMLOutputBuilder.h: Likewise.
	* include/dlvhex/TextOutputBuilder.h: Likewise.
	* src/dlvhex/RuleMLOutputBuilder.cpp: Likewise.
	* src/dlvhex/TextOutputBuilder.cpp: Likewise.

	* include/dlvhex/ResultContainer.h: Add ResultContainer to the Plugin API.
	* src/dlvhex/ResultContainer.cpp: Likewise.

	* include/dlvhex/PluginInterface.h: Fix documentation.
	Plugins can now register a PluginName to the Plugin API.

2008-01-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Add PluginContainer.

	* src/dlvhex/Makefile.am: Link with libltdl.
	* src/testsuite/dlvhex/Makefile.am: Likewise.

	* src/dlvhex/GraphBuilder.cpp: Use PluginContainer for Input Types.

	* src/dlvhex/AggregateAtom.cpp: Add missing includes.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/ProgramBuilder.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.

	* include/dlvhex/Makefile.am: Add EvaluateExtatom.h.

	* include/dlvhex/EvaluateExtatom.h: New file.
	* src/dlvhex/EvaluateExtatom.cpp: Likewise.

	* include/dlvhex/Component.h (ExternalComponent): Add PluginContainer.
	* include/dlvhex/DependencyGraph.h: Likewise.
	* include/dlvhex/GraphBuilder.h: Likewise.
	* include/dlvhex/ModelGenerator.h: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.

	* src/dlvhex/Component.cpp: Use EvaluateExtatom.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.

	* src/dlvhex/dlvhex.cpp (PluginContainer::getAtom): Move plugin
	search to PluginContainer.

	* src/dlvhex/HexParserDriver.cpp: Unify both parse functions.
	* include/dlvhex/HexParserDriver.h: Likewise.

	* src/dlvhex/HexParser.ypp: Treat ExternalAtoms purely
	syntactically, no assigning of PluginAtoms.

	* include/dlvhex/PluginInterface.h: Add OutputBuilder to the
	Plugin API.
	(PluginAtom::getInputTypes): New method.
	* src/dlvhex/PluginInterface.cpp: Likewise.

	* include/dlvhex/PluginContainer.h: Use libltdl.
	* src/dlvhex/PluginContainer.cpp: Likewise.

	* include/dlvhex/ExternalAtom.h (evaluate): Move to
	EvaluateExtatom.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* examples/Makefile.am: Add missing test files.

	* configure.ac: Configure libltdl.

	* bootstrap.sh: Copy libltdl.

	* NEWS: Update.

	* Makefile.am (SUBDIRS): Add libltdl.

2007-12-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* README: Small update.
	* NEWS: Likewise.

	* bootstrap.sh: Beautify.

	* m4/boost.m4: Use AC_COMPILE_IFELSE instead of deprecated AC_TRY_COMPILE.

	* src/testsuite/dlvhex/TestSuite.cpp: Fix compile-time warning.

	* configure.ac: Use pkgconfig for cppunit.
	Depend on Boost >= 1.33.0 and cppunit >= 1.12.0.

	* m4/cppunit.m4: Remove.

	* src/dlvhex/DLVresultScanner.lpp: flex 2.5.34 does not like C++-style comments.

	* src/testsuite/dlvhex/Makefile.am: Enable recursive builds in every directory.
	Link testsuite with libraries instead of compiling stuff redundantly.
	* src/Makefile.am: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* src/testsuite/Makefile.am: Likewise.
	* include/Makefile.am: Likewise.
	* include/testsuite/Makefile.am: Likewise.
	* Makefile.am: Likewise.

2007-12-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Makefile.am: Export OutputBuilder interface to the plugins.

	* src/dlvhex/Makefile.am: Export OutputBuilder interface to the plugins.
	Remove OutputBuilder.cpp.

	* include/dlvhex/ASPsolver.h: Add namespace dlvhex.
	Refactoring const and reference arguments.
	* include/dlvhex/AggregateAtom.h: Likewise.
	* include/dlvhex/AnswerSet.h: Likewise.
	* include/dlvhex/Atom.h: Likewise.
	* include/dlvhex/AtomFactory.h: Likewise.
	* include/dlvhex/AtomNode.h: Likewise.
	* include/dlvhex/AtomSet.h: Likewise.
	* include/dlvhex/BaseVisitor.h: Likewise.
	* include/dlvhex/BoostComponentFinder.h: Likewise.
	* include/dlvhex/Component.h: Likewise.
	* include/dlvhex/ComponentFinder.h: Likewise.
	* include/dlvhex/DLVresultFlexLexer.h: Likewise.
	* include/dlvhex/DLVresultParserDriver.h: Likewise.
	* include/dlvhex/DependencyGraph.h: Likewise.
	* include/dlvhex/Error.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/GraphBuilder.h: Likewise.
	* include/dlvhex/GraphProcessor.h: Likewise.
	* include/dlvhex/HexFlexLexer.h: Likewise.
	* include/dlvhex/HexParserDriver.h: Likewise.
	* include/dlvhex/Literal.h: Likewise.
	* include/dlvhex/ModelGenerator.h: Likewise.
	* include/dlvhex/NamesTable.h: Likewise.
	* include/dlvhex/ParserDriver.h: Likewise.
	* include/dlvhex/PrintVisitor.h: Likewise.
	* include/dlvhex/ProcessBuf.h: Likewise.
	* include/dlvhex/Program.h: Likewise.
	* include/dlvhex/ProgramBuilder.h: Likewise.
	* include/dlvhex/Registry.h: Likewise.
	* include/dlvhex/Repository.h: Likewise.
	* include/dlvhex/ResultContainer.h: Likewise.
	* include/dlvhex/Rule.h: Likewise.
	* include/dlvhex/SafetyChecker.h: Likewise.
	* include/dlvhex/globals.h: Likewise.
	* include/dlvhex/helper.h: Likewise.
	* src/dlvhex/ASPsolver.cpp: Likewise.
	* src/dlvhex/AggregateAtom.cpp: Likewise.
	* src/dlvhex/AnswerSet.cpp: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/AtomFactory.cpp: Likewise.
	* src/dlvhex/AtomNode.cpp: Likewise.
	* src/dlvhex/AtomSet.cpp: Likewise.
	* src/dlvhex/BoostComponentFinder.cpp: Likewise.
	* src/dlvhex/Component.cpp: Likewise.
	* src/dlvhex/ComponentFinder.cpp: Likewise.
	* src/dlvhex/DLVresultParser.ypp: Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.
	* src/dlvhex/DependencyGraph.cpp: Likewise.
	* src/dlvhex/Error.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GraphBuilder.cpp: Likewise.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/HexParserDriver.cpp: Likewise.
	* src/dlvhex/Literal.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.
	* src/dlvhex/ParserDriver.cpp: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.
	* src/dlvhex/ProcessBuf.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/ProgramBuilder.cpp: Likewise.
	* src/dlvhex/Registry.cpp: Likewise.
	* src/dlvhex/Repository.cpp: Likewise.
	* src/dlvhex/ResultContainer.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/SafetyChecker.cpp: Likewise.
	* src/dlvhex/Term.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/dlvhex/globals.cpp: Likewise.
	* src/dlvhex/helper.cpp: Likewise.

	* include/dlvhex/PluginContainer.h: Smart-pointerize PluginAtom.
	Add namespace dlvhex.
	Refactoring const and reference arguments.
	* include/dlvhex/PluginInterface.h: Likewise.
	* src/dlvhex/PluginContainer.cpp: Likewise.
	* src/dlvhex/PluginInterface.cpp: Likewise.

	* src/dlvhex/HexParser.ypp: Fix a small memory leak.
	Add namespace dlvhex.
	* src/dlvhex/HexScanner.lpp: Likewise.

	* include/testsuite/dlvhex/ASPsolverTest.h: Add namespace dlvhex.
	Add __declspec(dllexport) macros.
	* include/testsuite/dlvhex/TestGraphProcessor.h: Likewise.
	* include/testsuite/dlvhex/TypeTest.h: Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp: Likewise.
	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Likewise.
	* src/testsuite/dlvhex/TestPlugin.cpp: Likewise.
	* src/testsuite/dlvhex/TypeTest.cpp: Likewise.

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Add answer sets costs support.

	* src/dlvhex/OutputBuilder.cpp: Split OutputBuilder files.
	* include/dlvhex/OutputBuilder.h: Likewise.
	* include/dlvhex/TextOutputBuilder.h: Likewise.
	* src/dlvhex/TextOutputBuilder.cpp: Likewise.

	* include/dlvhex/RuleMLOutputBuilder.h: Update RuleML output to 0.91.
	* src/dlvhex/RuleMLOutputBuilder.cpp: Likewise.

	* include/dlvhex/PlatformDefinitions.h: New file.

	* TODO: Update.

	* configure.ac [macosx]: Add macports and fink include directories
	to CPPFLAGS by default.
	Update maintainer.

	* include/dlvhex/Term.h: Fix documentation.

2007-11-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

	* configure.ac: Add dirname of FlexLexer.h as include path to
	CPPFLAGS.

2007-11-19  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: Update.

2007-11-11  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* TODO: New file.

	* INSTALL: Remove autogenerated files.
	* COPYING: Likewise.

2007-10-30  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/TestPlugin.cpp: Fix some warnings.

2007-08-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am (libdlvhexbase_la_LDFLAGS): Bump
	version-info to 5:1:0.

2007-08-25  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* examples/simple1.hex: Added.
	* examples/tests/dlvhextests.test: Added test.
	* examples/tests/simple1.out: Added.

	* src/dlvhex/AtomNode.cpp: Corrected < operator of Dependency to take rule
	into account.

2007-08-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp: Fix compile-time warnings.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* examples/Makefile.am: Likewise.

	* examples/tests/namespace1.out: Fix answer sets.

	* examples/tests/weak1r.out: New file.

2007-08-16  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* NEWS: updated.
	* configure.ac: bumbed to version 1.7.0

2007-07-19  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/ExternalAtom.cpp (initReplAux): Replacement bug for uppercase
	extatom names fixed.
	* src/dlvhex/dlvhex.cpp (insertNamespaces): namespace handling for new URI
	formats fixed. Backtranslation now broken.

2007-07-18  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Improved documentation.
	* include/dlvhex/AtomSet.h: Likewise.
	* include/dlvhex/Term.h: Likewise.
	* include/dlvhex/PluginInterface.h: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp: Relaxed extatom input checking for
	tuple-inputs.
	* src/dlvhex/PluginInterface.cpp: Likewise.

2007-05-29  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	Add emacs local variables at the end of each source file.

2007-05-29  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* Makefile.am: AUTOMAKE_OPTIONS = gnu.
	* include/dlvhex/Makefile.am: Likewise.
	* include/testsuite/dlvhex/Makefile.am: Likewise.
	* src/dlvhex/Makefile.am: Likewise.
	* src/testsuite/dlvhex/Makefile.am: Likewise.

2007-05-25  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* COPYING: Added GPL license.
	* all source files: Likewise.

2007-05-24  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* AUTHORS: new file.
	* INSTALL: new file.
	* NEWS: new file.
	* README: Improved docs.

	* Makefile.am: Added --foreign option.

	* bootstrap.sh: Using reconfigure now instead of single autotools.

	* configure.ac: Bumped version to 1.6.0.

	* examples/tests/dlvhextests.test: Added test for reverse ordering. Added
	-a switch, which was removed from the testscript defaults.

	* include/dlvhex/AnswerSet.h: Modified docs according to generalization of
	AnswerSet ordering.

	* src/dlvhex/AnswerSet.cpp: Parametrized set ordering according
	to usage of command-line switch --reverse. Throw exception for non-integer
	weights and levels when building an answer set in presence of weak
	constraints.

	* src/dlvhex/Atom.cpp: Improved error message for nonground
	propositional atoms (which is the common message for accidental non-HEX input).

	* src/dlvhex/dlvhex.cpp (printUsage), (main): Added command line switch
	--reverse for reverse answer-set ordering in case of weak constraints.
	Added exception catching for result-building.

	* src/testsuite/dlvhex/Makefile.am: Removed -a switch from general
	parameters of testsuite-script.

2007-05-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* examples/extatom2.hex: Added test.
	* examples/tests/extatom2.out: Added test result.
	* examples/tests/dlvhextests.test: Likewise.

	* include/dlvhex/AtomNode.h: Added documentation.

	* src/dlvhex/Atom.cpp: Commented out arity check in Atom-creation,
	conflicts with auxiliary temporary atoms in guess-and-check procedure.

	* src/dlvhex/AtomNode.cpp (inBody), (setHead), (setBody),
	(addPreceding), (addSucceeding), (operator), (rule), (addDep),
	(NodeGraph), (addNode), (addUniqueHeadNode), (addUniqueBodyNode): Added
	documentation. Reformatted. Modified verbose-output of AtomNodes.

	* src/dlvhex/GraphBuilder.cpp (run): Fixed bug regarding storage of
	auxiliary rules for external atom dependencies within rule bodies.

	* src/dlvhex/dlvhex.cpp (printUsage), (main): Fixed bug regarding input
	from stdin (was not passed to rewriters and converters). Modified help output.

	* src/testsuite/dlvhex/TestPlugin.cpp: Added testConcat atom.

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Modified test-output.

2007-04-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Mac OS X has a
	non-standard mktemp, use "mktemp -t tmp.XXXXXXXXXX" instead.

2007-04-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/DLVresultParser.ypp: Use plain int instead of int* in yylval.
	free() instead of delete() all idents.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.

	* include/dlvhex/Atom.h: User references were adequate and remove
	some minor warnings.
	* include/dlvhex/AtomNode.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/AtomNode.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/ResultContainer.cpp: Likewise.

2007-04-23  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* README: Reformatted.

	* benchmarks/reviewers-pureasp.dlv: Added benchmark.

	* examples/3col.hex: New test.
	* examples/extatom1.hex: Likewise.
	* examples/msp.hex: Likewise.

	* examples/tests/3col.out: New test result.
	* examples/tests/msp.out: Likewise
	* examples/tests/extatom1.out: Likewise

	* examples/tests/dlvhextests.test: Added new tests.
	* examples/Makefile.am: Likewise.

	* include/dlvhex/Atom.h: Added equality testing method. Added strong
	negation setter.
	* src/dlvhex/Atom.cpp (operator): Likewise.

	* include/dlvhex/AtomNode.h: Added Dependency::operator< for std::sets of
	Dependencies. Changed AtomNode's dependencies to std::set.
	* src/dlvhex/AtomNode.cpp (addPreceding), (addSucceeding),
	(operator): Likewise.

	* include/dlvhex/AtomSet.h: Added consistency test for atom sets.
	* src/dlvhex/AtomSet.cpp (multiplySets), (clear), (insert),
	(remove), (keep), (keepPos): Likewise. Reformatted whitespace.

	* include/dlvhex/ExternalAtom.h: Added equality testing method.

	* include/dlvhex/Makefile.am: Reformatted whitespace.

	* include/dlvhex/PluginInterface.h: Reformatted whitespace.

	* include/dlvhex/globals.h: Added verbose level for graph processor.
	* src/dlvhex/globals.cpp (Globals): Likewise.

	* src/dlvhex/BoostComponentFinder.cpp: Treat AtomNode's dependencies as
	std::set now.

	* src/dlvhex/Component.cpp (modelGenerator), (evaluate),
	(collectUp), (getPredecessors), (getSuccessors),
	(getUnsolvedLeaves): Likewise.
	* src/dlvhex/DependencyGraph.cpp (hasNegEdge): Likewise.

	* src/dlvhex/DLVresultParser.ypp: Use char* instead of std:string for dlv
	result parsing.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp (pluginAtom), (initReplAux),
	(setInputTerms): Reestablishes arity checks for ExternalAtom construction.
	Reformatted whitespace.

	* src/dlvhex/GraphBuilder.cpp (run): Debugged.

	* src/dlvhex/GraphProcessor.cpp (depGraph), (run), (getNextModel):
	Debugged.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Added missing
	minimality check. Reformatted whitespace.

	* src/dlvhex/OutputBuilder.cpp (buildAnswerSet), (buildPre),
	(buildPost): Corrected RuleML output. Reformatted whitespace.

	* src/dlvhex/SafetyChecker.cpp (throw): Corrected handling of
	BuiltinPredicates.

	* src/dlvhex/dlvhex.cpp (searchPlugins), (main): Moved EDB and IDB vars
	into main(). Added consistency check for EDB.

	* src/testsuite/dlvhex/TestPlugin.cpp: Added plugin for testsuite.

	* src/testsuite/dlvhex/Makefile.am: Modified testscript execution to
	accommodate test-plugin. Creation of test-plugin.

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Include test-plugin.

2007-04-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Rule.cpp (Rule::operator==): Use STL algorithms.

	* include/dlvhex/Makefile.am (pkginclude_HEADERS): Add
	PluginContainer.h.
	(noinst_HEADERS): noinst_HEADERS are now disjunct to
	pkginclude_HEADERS.

	* src/dlvhex/ExternalAtom.cpp: Initialize ExternalAtom::pluginAtom
	to 0.

2007-04-22  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am (libdlvhexbase_la_LDFLAGS): Bump version-info to 5:0:0.
	(libaspsolver_la_LDFLAGS): Start version-info with 0:0:0.

	* src/dlvhex/GraphBuilder.cpp: Use Rule* instead of rule-id in Dependency.

	* include/dlvhex/ExternalAtom.h (ExternalAtom::setFunctionName): New method.
	(ExternalAtom::initReplAux, ExternalAtom::extAtomNo): Set replication and aux Name according to extAtomNo.
	(ExternalAtom::findPluginAtom): Add const modifier s.t. we can lazy-setup ExternalAtom::pluginAtom.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* include/dlvhex/AtomNode.h (NodeGraph::reset, NodeGraph::getProgram): New methods.
	(Dependency::Type): Use powers of 2 as type numbers, so we can encode bitstrings.
	Use Rule* instead of a rule-id.
	* src/dlvhex/AtomNode.cpp: Likewise.

2007-04-20  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h (Atom::setArguments): New method.
	* src/dlvhex/Atom.cpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp (ExternalAtom::setInputTerms): New method.
	* include/dlvhex/ExternalAtom.h: Likewise.

2006-12-06  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* benchmarks/reviewers-pureasp.dlv: Added benchmark.

	* benchmarks/run.sh: Modified "time"-call.

	* configure.ac: Bumped version to 1.5. Added check for boost-time-date in
	case of --enable-debug.

	* examples/tests/dlvhextests.test: Added msp and 3col tests.

	* include/dlvhex/globals.h: Added timer-start and stop macros.

	* m4/boost.m4: AC_LANG_PUSH instead of deprecated AC_LANG_SAVE.

	* src/dlvhex/ASPsolver.cpp (callSolver): Added profiling.
	* src/dlvhex/Component.cpp (evaluate): Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/dlvhex.cpp (printUsage), (main): Likewise.

	* src/dlvhex/AtomNode.cpp: Avoid compiler warning (scope of variable
	declaration).

	* src/dlvhex/AtomSet.cpp (multiplySets): Subset-tests for speedup.

	* src/dlvhex/BoostComponentFinder.cpp (findStrongComponents): Proper
	usage of verbose-categories and -output-stream.
	* src/dlvhex/DependencyGraph.cpp (componentFinder): Likewise.
	* src/dlvhex/PluginContainer.cpp (importPlugin): Likewise.
	* src/dlvhex/SafetyChecker.cpp (throw): Likewise.

	* src/dlvhex/GraphProcessor.cpp (run): Added profiling. Added test before
	combination of subgraph-models for speedup.

	* src/dlvhex/globals.cpp (Globals), (doVerbose): Changed
	verbose-categories to bit-setting instead of numerical value.

2006-12-01  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/AtomNode.cpp: Corrected bug in rule-building for constraints

2006-12-01  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* README: Added dependency information.

	* configure.ac: Added check for boost/ptr_container headers.

	* include/dlvhex/AtomNode.h: Documentation.
	* include/dlvhex/PluginInterface.h: Likewise.

	* src/dlvhex/SafetyChecker.cpp (SafetyCheckerBase), (throw): Modified
	verbose output.

2006-11-28  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/AtomNode.cpp (AtomNode::getRules): Update
	documentation.

2006-11-27  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Rule.h: Fix WeakConstraint head atoms handling.
	* src/dlvhex/Rule.cpp: Likewise.

	* include/dlvhex/ExternalAtom.h
	(ExternalAtom::getArity,ExternalAtom::getArguments): Remove.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* src/dlvhex/DependencyGraph.cpp: Fix compiler warning.

	* src/dlvhex/Component.cpp: Call AtomNode::getRules only once.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp: Likewise.

	* src/dlvhex/Makefile.am: Bump library version to 4:0:0.

	* src/dlvhex/GraphBuilder.cpp (GraphBuilder::run): Create
	Dependency with a rule identifier.

	* include/dlvhex/AtomNode.h: (Dependency::getRuleID): Get rule
	identifier of a dependency.
	(AtomNode::getRules): Create rules of a head atom in an on-the-fly
	fashion.
	* src/dlvhex/AtomNode.cpp: Likewise.

	* include/dlvhex/Rule.h (Rule::addHead,Rule::addBody): New methods.
	* src/dlvhex/Rule.cpp: Likewise.

2006-11-19  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AtomNode.h: Changed "const Rule*" to "Rule*" in addRule() and
	getRules() and vector of rules.
	* src/dlvhex/AtomNode.cpp (addRule), (operator): Likewise.

	* include/dlvhex/PluginInterface.h: Documentation.

	* include/dlvhex/Program.h: Added iterator in addition to const_iterator.
	Removed const from Rule* in ruleset_t and addRule(), addWeakConstraint().
	Added deleteRule().
	* src/dlvhex/Program.cpp (addRule), (deleteRule),
	(addWeakConstraint): Likewise.

	* include/dlvhex/Rule.h: Removed some of the const from Rule*, because we
	want rules to be modifiable now. Added setHead(), setBody().
	* src/dlvhex/Rule.cpp (setHead), (setBody): Likewise.

	* src/dlvhex/Component.cpp: AtomNode::getRules() doesn't return const
	Rule*'s any more.
	* src/dlvhex/FixpointModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp (compute): Likewise.

	* src/dlvhex/GraphBuilder.cpp (run): Changed const_iterator to iterator in
	rule-loop, since rule pointers are added to AtomNodes and could be
	modified there later.

	* src/dlvhex/dlvhex.cpp: Documentation.

2006-11-18  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Bumped version to 1.4.

	* include/dlvhex/Atom.h: Documentation.

	* include/dlvhex/AtomNode.h: Introduced shared AtomNodePtr.
	* src/dlvhex/AtomNode.cpp: Likewise
	* include/dlvhex/BoostComponentFinder.h: Likewise.
	* include/dlvhex/Component.h: Likewise.
	* src/dlvhex/Component.cpp: Likewise.
	* include/dlvhex/ComponentFinder.h: Likewise.
	* src/dlvhex/ComponentFinder.cpp: Likewise.
	* src/dlvhex/BoostComponentFinder.cpp: Likewise.
	* include/dlvhex/ModelGenerator.h: Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/GraphBuilder.cpp (run): Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Likewise.

	* include/dlvhex/DependencyGraph.h: Moved GraphBuilder out of Constructor.
	Introduced AtomNodePtr.
	* src/dlvhex/DependencyGraph.cpp: Likewise.

	* include/dlvhex/ExternalAtom.h: Documentation.

	* include/dlvhex/Literal.h: Changed RuleBody_t to std::set. Documentation.

	* include/dlvhex/PluginInterface.h: Split Rewriter into Converter,
	Rewriter and Optimizer. Documentation.

	* include/dlvhex/PrintVisitor.h: added getStream().

	* include/dlvhex/Program.h: Changed ruleset_t to std::set. Documentation.

	* include/dlvhex/Registry.h: Added comment.

	* include/dlvhex/Repository.h: Added comment.

	* include/dlvhex/Rule.h: Changed RuleHead_t to std::set. Documentation.

	* include/dlvhex/Term.h: Documentation.

	* include/dlvhex/globals.h: Added verbose-types.
	* src/dlvhex/globals.cpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp: Corrected error in atom construction.

	* src/dlvhex/HexParser.ypp: Changed push_back to insert for heads and
	bodies.

	* src/dlvhex/Literal.cpp (operator): Added less-than operator.

	* src/dlvhex/OutputBuilder.cpp (buildAnswerSet): Corrected tuple-output
	arity.

	* src/dlvhex/PrintVisitor.cpp: Adapted
	output loops to std::set instead of std::vector (heads and bodies).

	* src/dlvhex/Program.cpp: Adapted constructor to std::set (body).

	* src/dlvhex/Rule.cpp: less-than operator for Rule and RuleHead_t.

	* src/dlvhex/dlvhex.cpp: Introduced Converter-calls and Optimizer-calls.

	* src/testsuite/dlvhex/ASPsolverTest.cpp: Removed verbose output.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Adpated to new head and
	body containers.

	* src/testsuite/dlvhex/TestSuite.cpp: Modified type of outputter.

2006-10-30  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Turn off ps-documentation per default.

	* include/dlvhex/Term.h: Enhanced documentation. Changed type Type to
	TermType.
	* src/dlvhex/Term.cpp: Changed typedef of Type to TermType.

	* src/dlvhex/FixpointModelGenerator.cpp (compute): Enhanced documentation.
	* src/dlvhex/dlvhex.cpp: Likewise.

2006-10-27  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/ExternalAtom.cpp (findPluginAtom): Added function to check
	external atom parameters. Removed checks from constructor.
	* include/dlvhex/ExternalAtom.h: Likewise.

	* src/dlvhex/HexParser.ypp: Call check after construction of external
	atom.

2006-10-27  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* doxygen.am: Updating and improving doxygen output.
	* doxygen.cfg: Likewise.
	* include/dlvhex/ASPsolver.h: Likewise.
	* include/dlvhex/AggregateAtom.h: Likewise.
	* include/dlvhex/DLVresultParserDriver.h: Likewise.
	* include/dlvhex/HexParserDriver.h: Likewise.
	* include/dlvhex/Term.h: Likewise.
	* src/dlvhex/ASPsolver.cpp: Likewise.
	* src/dlvhex/Component.cpp (evaluate): Likewise.
	* src/dlvhex/DLVresultParserDriver.cpp: Likewise.
	* src/dlvhex/HexParserDriver.cpp: Likewise.
	* src/dlvhex/OutputBuilder.cpp: Likewise.
	* src/dlvhex/PluginInterface.cpp: Likewise.
	* src/dlvhex/Term.cpp (Term): Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.

2006-10-25  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/BaseVisitor.h: Add doxygen doc.
	* include/dlvhex/PrintVisitor.h: Likewise.
	* include/dlvhex/ProgramBuilder.h: Likewise.
	* include/dlvhex/Repository.h: Likewise.

2006-10-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am: Add PrintVisitor.cpp and bump library
	version to 3:0:0.

	* include/dlvhex/Makefile.am: Add BaseVisitor.h and
	PrintVisitor.h.

	* include/dlvhex/BaseVisitor.h: Add Visistor classes.
	* include/dlvhex/PrintVisitor.h: Likewise.
	* src/dlvhex/PrintVisitor.cpp: Likewise.

	* include/dlvhex/AggregateAtom.h: Implement Visitor Pattern.
	* include/dlvhex/Atom.h: Likewise.
	* include/dlvhex/AtomSet.h: Likewise.
	* include/dlvhex/ExternalAtom.h: Likewise.
	* include/dlvhex/Literal.h: Likewise.
	* include/dlvhex/ProgramBuilder.h: Likewise.
	* include/dlvhex/Repository.h: Likewise.
	* include/dlvhex/Rule.h: Likewise.
	* src/dlvhex/AggregateAtom.cpp: Likewise.
	* src/dlvhex/AnswerSet.cpp: Likewise.
	* src/dlvhex/Atom.cpp: Likewise.
	* src/dlvhex/AtomSet.cpp: Likewise.
	* src/dlvhex/BoostComponentFinder.cpp: Likewise.
	* src/dlvhex/ExternalAtom.cpp: Likewise.
	* src/dlvhex/GraphProcessor.cpp: Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp: Likewise.
	* src/dlvhex/Literal.cpp: Likewise.
	* src/dlvhex/OutputBuilder.cpp: Likewise.
	* src/dlvhex/Program.cpp: Likewise.
	* src/dlvhex/ProgramBuilder.cpp: Likewise.
	* src/dlvhex/Repository.cpp: Likewise.
	* src/dlvhex/Rule.cpp: Likewise.
	* src/dlvhex/dlvhex.cpp: Likewise.
	* src/testsuite/dlvhex/TypeTest.cpp: Likewise.

2006-10-18  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* examples/agg1.hex: Added aggregates example and test.
	* examples/tests/dlvhextests.test: Likewise.

	* examples/tests/agg1.out: Added aggregates test result.

	* include/dlvhex/AggregateAtom.h: Added.
	* include/dlvhex/Makefile.am: Likewise.

	* include/dlvhex/Rule.h: Removed typedef of RuleBody_t.
	* include/dlvhex/Literal.h: Moved typedef of RuleBody_t here.

	* src/dlvhex/AggregateAtom.cpp: Added.
	* src/dlvhex/Makefile.am: Likewise.

	* src/dlvhex/HexParser.ypp: Added parsing of aggregates.
	* src/dlvhex/HexScanner.lpp: Likewise.

	* src/dlvhex/SafetyChecker.cpp (throw): Consider aggregate-atoms when
	checking for weak safety.

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Extended parsing of .test
	files: (optional) third string in each line is apssed to dlvhex as
	parameter.

2006-10-16  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* README: Extended.

	* include/dlvhex/Makefile.am: Install globals.h.

	* include/dlvhex/globals.h: Added functions addFilter() and getFilters()
	for global filter handling.
	* src/dlvhex/globals.cpp (addFilter,getFilters): Likewise.

	* src/dlvhex/ResultContainer.cpp (filterIn): Do nothing if filter list is
	empty.

	* src/dlvhex/dlvhex.cpp (main): Global filter handling.

2006-10-05  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Component.cpp (SubGraph::dump): Use out instead of
	std::cout.
	Use std::cerr instead of std::cout for debugging output.

	* src/dlvhex/Makefile.am: Install libaspsolver and add depgraph
	related code to libdlvhexbase.

	* include/dlvhex/Rule.h: Add operator<< for Rules and
	WeakConstraints.
	* src/dlvhex/Rule.cpp: Likewise.

	* include/dlvhex/Makefile.am: Install depgraph related header
	files.

	* dlvhex.pc.in: Add libaspsolver to the libraries.

2006-09-27  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* README: Corrected and improved README.

	* examples/tests/dlvhextests.test: Added namespace test.
	* examples/namespace1.hex: Added.
	* examples/tests/namespace1.out: Added.

	* src/dlvhex/GraphBuilder.cpp (run): Allow NAF external atoms.

	* src/dlvhex/HexParser.ypp: Added NAF external atoms.

	* src/dlvhex/HexScanner.lpp: Corrected bug in counting newlines.

	* src/dlvhex/Makefile.am: Changed compilation order of ASPsolver.cpp.

	* src/dlvhex/dlvhex.cpp (printUsage), (main): Corrected and extended
	help-message. Added switch for keeping namespace-abbreviations in the
	result. Use mkstemp instead of tmpnam to avoid compiler warning.

	* src/testsuite/dlvhex/Makefile.am: Added parameter handling for
	invoking dlvhex from the test-script.
	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Likewise. Escape single
	quotes when comparing dlvhex-output. Added character encoding in
	python script.

2006-09-18  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/globals.h: Introduced verbose-levels and
	verbose-actions. doVerbose() is true, if specified verbose-level is
	higher than passed verbose-action.
	* src/dlvhex/globals.cpp (Globals), (doVerbose): Likewise.

	* src/dlvhex/ASPsolver.cpp (callSolver): Catching exception if process
	pipe cannot be written.

	* src/dlvhex/Component.cpp (evaluate): Use doVerbose() method with
	corresponding flag for verbose output.
	* src/dlvhex/FixpointModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp (compute): Likewise.

	* src/dlvhex/dlvhex.cpp (main): Dump rewritten program in
	verbose mode.

2006-09-17  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* Makefile.am: Added examples-subdir.

	* configure.ac: Added examples-Makefile.

	* examples/Makefile.am: Added.
	* examples/weak1.hex: Added test program.
	* examples/weak2.hex: Added test program.
	* examples/tests/dlvhextests.test: Added list of test-programs to be
	processed by testsuite.
	* examples/tests/weak1.out: Added test output.
	* examples/tests/weak2.out: Added test output.

	* examples/complex.hex: Removed.
	* examples/delicious.hex: Removed.
	* examples/foaf.hex: Removed.
	* examples/raptorerror.hex: Removed.
	* examples/shop.hex: Removed.
	* examples/shop.owl: Removed.
	* examples/test.hex: Removed.
	* examples/tweety.hex: Removed.
	* examples/tweety_bird.owl: Removed.

	* include/dlvhex/AnswerSet.h: Added static methods setMaxLevelWeight(),
	getMaxLevel().

	* include/dlvhex/ResultContainer.h: Removed lowestWeights class member
	variable.

	* src/dlvhex/Makefile.am: Changed order of libaspsolver sources to
	avoid missing bison-generated files in build process.

	* src/dlvhex/AnswerSet.cpp (setSet), (addWeight),
	(setMaxLevelWeight), (getMaxLevel): Added methods.

	* src/dlvhex/OutputBuilder.cpp (buildAnswerSet): Improve silent output
	in case of weak constraints.

	* src/dlvhex/ResultContainer.cpp (addSet), (print): Remove lowest cost
	computation at set-add-time. Stop model output in case of weak
	constraints after best model(s), correcting previous wrong handling.

	* src/dlvhex/dlvhex.cpp (printUsage), (main): Added switch --allmodels
	to print all models in case of weak constraints.

	* src/testsuite/dlvhex/run-dlvhex-tests.sh: Added script for checking
	dlvhex output on test programs.

	* src/testsuite/dlvhex/Makefile.am: Added dlvhex test script to
	testsuite.

2006-09-17  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/testsuite/dlvhex/Makefile.am (dlvhexTS_SOURCES): Use
	$(top_srcdir) instead of ../.. .
	(AM_CPPFLAGS): Add -I$(top_srcdir)/src.

	* configure.ac: Bump version to 1.3.
	Always define FLEXLEXER_H, otw. make distcheck is a no-op.

2006-09-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Fix bashism.

2006-09-14  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* m4/cppunit.m4: Include updated macros from cppunit 1.12.0.

	* m4/boost.m4: Fix boost version checking on macosx.

	* configure.ac: Don't follow subdirectories when searching for
	FlexLexer.h.

	* src/dlvhex/ProcessBuf.cpp (ProcessBuf): sigemptyset() is a macro
	on macosx.

2006-09-13  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Refined packaging of FlexLexer.h.

2006-09-13  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/common.h.in: New file.

	* README: Added configuration information.

	* configure.ac: Added host system checking. Added FlexLexer.h
	packaging.

	* src/dlvhex/ASPsolver.cpp (callSolver): Added comment.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Cleaned up code.

	* src/dlvhex/Makefile.am: Add FlexLexer.h to distribution directory.

	* src/dlvhex/dlvhex.cpp (printLogo): Added version number to logo.

2006-09-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am: Bump libdlvhexbase version to 2:0:0.

	* configure.ac: Bump dlvhex version to 1.2.

	* include/dlvhex/PluginInterface.h (PluginAtom::Answer):
	Shrinkwrap the output tuples with a boost::shared_ptr<>.
	* src/dlvhex/PluginInterface.cpp: Likewise.

	* src/dlvhex/ProcessBuf.cpp (ProcessBuf::ProcessBuf): Setup struct
	sigaction properly.
	(ProcessBuf::endoffile,ProcessBuf::close): Only close() valid file
	descriptors.

2006-08-20  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/DLVresultParserDriver.h
	(DLVresultParserDriver::parse): Added parameter for dlv
	errors.

	* include/dlvhex/globals.h: Added getVerboseStream() to return verbose
	output stream.

	* src/dlvhex/ASPsolver.cpp (callSolver): Improved verbose output.
	Moved maxint-directive to the end of the input program.

	* src/dlvhex/DLVresultParser.ypp: Keep track of dlv errors.

	* src/dlvhex/DLVresultParserDriver.cpp (parse): Call dlv-result parser
	with error-string parameter.

	* src/dlvhex/DLVresultScanner.lpp: Changed order of tokens.

	* src/dlvhex/ProcessBuf.cpp (open): Added redirection of STDERR.

	* src/dlvhex/dlvhex.cpp (main): Added defaults for global variables.
	Changed verbose-option to accept level.

	* src/dlvhex/globals.cpp (getVerboseStream): Added.

	* src/testsuite/dlvhex/ASPsolverTest.cpp (testExecution),
	(testResult): Added explanatory output.

2006-08-19  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h (Atom::getArguments): Add non-emptyness
	assertion.

2006-08-18  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Set version number to 1.0.0.

	* include/dlvhex/PluginInterface.h: Added Functions setVersion() and
	getVersionMajor(), getVersionMinor(), getVersionMicro(). Constructor
	sets version to 0.0.0.

	* src/dlvhex/PluginContainer.cpp (importPlugin): Added output of
	version number when loading a plugin.

2006-08-13  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Bump version to 1.1.

2006-08-11  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/Term.h (Term::getUnquotedString): Inline code.
 	(Term::compare): Move Term::operator!= to Term::compare.
	* src/dlvhex/Term.cpp: Likewise.

	* include/dlvhex/OutputBuilder.h (OutputBuilder::getString):
 	Inline code.
	* src/dlvhex/OutputBuilder.cpp: Likewise.

	* include/dlvhex/ExternalAtom.h (ExternalAtom::getArguments):
 	Inline code.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* src/dlvhex/Atom.cpp (Atom::operator<): Directly operate on
 	arguments instead of a temporary copy of arguments.
 	(Atom::getArguments): Inline code.
 	(Atom::getArgument,Atom::getPredicate): Use a const reference
 	return value.
	* include/dlvhex/Atom.h: Likewise.

2006-08-09  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/AtomSet.cpp (AtomSet::operator<): Use
	std::lexicographical_compare instead of std::mismatch.

	* src/dlvhex/AnswerSet.cpp (AnswerSet::operator<): Fix ordering.

2006-08-08  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/globals.h: Changed global variables to singleton
	class.
	* src/dlvhex/globals.cpp (Globals), (Instance), (getOption), (setOption): Likewise.

	* src/dlvhex/ASPsolver.cpp (callSolver): Adjusted to new global class (reading values of dlvhex-switches).
	* src/dlvhex/BoostComponentFinder.cpp (findStrongComponents): Likewise.
	* src/dlvhex/Component.cpp (evaluate): Likewise.
	* src/dlvhex/DLVresultParser.ypp: Likewise.
	* src/dlvhex/DependencyGraph.cpp (componentFinder): Likewise.
	* src/dlvhex/FixpointModelGenerator.cpp (serializeProgram), (compute):Likewise.
	* src/dlvhex/GraphProcessor.cpp (run): Likewise.
	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* src/dlvhex/OrdinaryModelGenerator.cpp (initialize), (compute): Likewise.
	* src/dlvhex/PluginContainer.cpp (importPlugin): Likewise.
	* src/dlvhex/SafetyChecker.cpp (SafetyCheckerBase), (throw): Likewise.
	* src/dlvhex/dlvhex.cpp (main): Likewise.
	* src/testsuite/dlvhex/ASPsolverTest.cpp (setUp): Likewise.

	* src/dlvhex/AtomSet.cpp: Corrected AtomSet< operator.

	* src/dlvhex/Makefile.am: Added version-info for libdlvhexbase.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp (testSimple): Added debug-output.


2006-08-07  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/AtomSet.h (AtomSet::const_iterator): Add support
	for pre- and postfix operator--().

2006-08-07  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Allowing non-absolute dlv-path.

	* src/dlvhex/ProcessBuf.cpp (open): Allowing dlv to be executed in
	user-$PATH


2006-08-04  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/AtomSet.h (AtomSet::const_iterator): In order to
	get the STL algorithms working we inherit from std::iterator<>.

2006-07-31  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h: New prototype for setOptions().

	* src/dlvhex/dlvhex.cpp (main): Improved option handling with plugins.


2006-07-23  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Literal.cpp (Literal::operator=): Return *this.

	* src/dlvhex/Atom.cpp: Pass ctor arguments by reference.
	* include/dlvhex/Atom.h: Likewise.

	* include/dlvhex/AtomSet.h (AtomSet::const_iterator::operator->):
	Add operator.

2006-07-19  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Term.h: Added function isAnon().

	* src/dlvhex/ASPsolver.cpp (callSolver): Debug output added/removed.

	* src/dlvhex/HexParser.ypp: Removed comment.

	* src/dlvhex/Term.cpp: Added isAnon(). Fixed wrong unification
	handling.


2006-07-10  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* m4/doxygen.m4: Fix for newer autoconfs, see Debian Bug #368712.

2006-07-06  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Add AC_LIBTOOL_DLOPEN.

	* src/dlvhex/Makefile.am (dlvhex_LDFLAGS): Add -static and
	-export-dynamic.

2006-06-21  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* configure.ac: Add AC_LIBTOOL_DLOPEN.

	* src/dlvhex/Makefile.am (dlvhex_LDFLAGS): Add -static and
	-export-dynamic.

2006-06-16  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* configure.ac: Changed version number to 1.0. This will now be the
	official dlvhex 1.0 release.

2006-06-15  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* src/dlvhex/Makefile.am: Check versions of bison and flex.

	* src/dlvhex/HexParserDriver.cpp: Include HexFlexLexer.h

	* src/dlvhex/DLVresultParserDriver.cpp: Include DLVresultFlexLexer.h.

	* src/dlvhex/DLVresultParser.ypp: Adapt parser to bison 2.2/2.3.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.
	* src/dlvhex/HexParser.ypp: Likewise.
	* src/dlvhex/HexScanner.lpp: Likewise.

	* include/dlvhex/Makefile.am (noinst_HEADERS): Add
	HexFlexLexer.h and DLVresultFlexLexer.h.

	* include/dlvhex/ExternalAtom.h: Fix warning.
	* src/dlvhex/ExternalAtom.cpp: Likewise.

	* include/dlvhex/HexParserDriver.h (HexFlexLexer): Remove.

	* include/dlvhex/DLVresultParserDriver.h (DLVresultFlexLexer): Remove.

	* include/dlvhex/DLVresultFlexLexer.h: New file.
	* include/dlvhex/HexFlexLexer.h: Likewise.

2006-06-12  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/AnswerSet.cpp: Corrected answer set ordering in case of
	weak constraints (higher levels have higher priority).

	* src/dlvhex/ResultContainer.cpp (filterIn): Keep only positive facts
	if filter is used.

	* src/dlvhex/dlvhex.cpp (main): do not try to close dlt-inputstream if
	dlt is not used.


2006-06-07  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AtomSet.h: New function matchAtom().
	* src/dlvhex/AtomSet.cpp: Likewise.

	* include/dlvhex/Component.h: Prepared input set filtering for
	components.
	* src/dlvhex/Component.cpp (modelGenerator), (evaluate): Likewise.

	* include/dlvhex/NamesTable.h: Corrected error in namespace handling.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Corrected wrong
	behaviour.

	* src/dlvhex/Makefile.am: Removed static linking.

	* src/dlvhex/Term.cpp: Corrected bug in getUnquotedStrings().

	Fixes bug: #25


2006-06-06  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/NamesTable.h: Added compare method for name-iterator.

	* include/dlvhex/Term.h: Return const string& instead of string.

	* src/dlvhex/Atom.cpp: Accelerated Atom< ().

	* src/dlvhex/Term.cpp: Accelerated Term!= () by comparing
	term-name-iterators instead of term-strings.


2006-06-05  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/dlvhex.cpp (insertNamespaces), (removeNamespaces),
	(main): Adapted namespace handling to new namestable - strings are now
	stored with their quotes.

	* src/dlvhex/helper.cpp (stringExplode): Do not create a vector
	element if string to explode is empty. This allows for an empty filter
	string to have no effect.


2006-06-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/NamesTable.h: Added lookup table to speed up
	name-retrieval.

	* src/dlvhex/Atom.cpp: Improved speed of operator<.

	* src/dlvhex/DLVresultParser.ypp: Removed debug switches.

	* src/dlvhex/Term.cpp (Term): Simplified handling of quoted strings.

2006-05-31  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Modified the BuiltinPredicate to be closer to
	the parent class Atom.
	* src/dlvhex/Atom.cpp (BuiltinPredicate): Likewise.

	* include/dlvhex/ResultContainer.h: Added workaround to remove DLT
	auxiliary atoms from result.
	* src/dlvhex/ResultContainer.cpp (filterOutDLT): Likewise.
	* src/dlvhex/dlvhex.cpp (main): Likewise.

	Fixes bug: #27


2006-05-24  Thomas Krennwallner  <tkren@kr.tuwien.ac.at>

	* include/dlvhex/ProcessBuf.h: New file.
	* src/dlvhex/ProcessBuf.cpp: Likewise.

	* configure.ac: Don't create non-existing examples/Makefile.

	* include/dlvhex/Makefile.am (noinst_HEADERS): Add ProcessBuf.h.

	* src/dlvhex/Makefile.am (libaspsolver_la_SOURCES): Add ProcessBuf.cpp.

	* src/dlvhex/DLVresultParserDriver.cpp: Remove returncode
	parameter.
	* include/dlvhex/DLVresultParserDriver.h: Likewise.

	* src/dlvhex/DLVresultParser.ypp: Remove returncode parameter.
	Allow empty input (-silent).

	* src/dlvhex/ASPsolver.cpp (ASPsolver::callSolver): Outsource fork
	code to ProcessBuf.

	* include/dlvhex/ASPsolver.h (ASPsolver::callSolver): Use a
	reference to const std::string as program parameter.

2006-05-20  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* Makefile.am: Removed example directory.

	* bootstrap.sh: Added glibtoolize if libtoolize is not found (MacOS).

	* examples/Makefile.am: Removed.

	* include/dlvhex/Atom.h: Reintroduced the usage of Terms in builtins
	to enable namespace handling for builtin atoms.

	* src/dlvhex/ASPsolver.cpp (callSolver): Improved method of calling
	dlv, avoiding temp-file and problems on MacOS.
	* src/dlvhex/DLVresultParser.ypp: Likewise.

	* src/dlvhex/HexParser.ypp: Calling builtin-constructor with terms.

	* src/dlvhex/HexScanner.lpp: Allowing empty string constants.

	* src/dlvhex/Makefile.am: Enabled static linking.

	* src/dlvhex/dlvhex.cpp (main): NameTable debug output correction.

	Fixes bug: #26, #29


2006-05-16  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AnswerSet.h: Added operator<< for debugging
	purposes.

	* include/dlvhex/AtomSet.h: Changed return value of print() from void
	to std::ostream to be compatible with other print() functions.
	* src/dlvhex/AtomSet.cpp: Likewise.

	* include/dlvhex/HexParserDriver.h: Added function setOrigin() to set
	a filename associated with the input to parse.

	* src/dlvhex/AnswerSet.cpp (operator<): Corrected wrong operator
	behaviour. Added operator<< for debugging purposes.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Corrected
	algorithm.

	* src/dlvhex/HexParser.ypp: Registered filename to Rule constructor.

	* src/dlvhex/HexParserDriver.cpp (setOrigin), (parse): Added function
	setOrigin(). Added correct error handling to function parse when
	called with istream.

	* src/dlvhex/SafetyChecker.cpp (throw): Corrected safety error message
	handling. Modified verbose output.

	* src/dlvhex/dlvhex.cpp (main): Added passing of filename to parser
	driver.

	Fixes bug: #13, #16

2006-05-13  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/Atom.cpp (operator<): Throw proper exception in case of
	arity mismatch.

	* src/dlvhex/HexParser.ypp: Catch exception coming from creating a new
	Atom or adding it to the factory.

	Fixes bug: #22, 23


2006-05-10  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Modified BuiltinPredicate to consist of a
	general string instead of of two terms an an operator.

	* src/dlvhex/ASPsolver.cpp (callSolver): The maxint directive for dlv
	has to prepend the program instead of being appended at the end.
	Corrected.

	* src/dlvhex/Atom.cpp (operator<): Removed arity assertion for
	comparisons of atoms with variable predicates.

	* src/dlvhex/AtomSet.cpp: Corrected predicateMatches() operator
	parameters.

	* src/dlvhex/HexParser.ypp: Modified parsing of builtin predicates to
	fit class modifications. Added parsing of #int() predicate.

	* src/dlvhex/SafetyChecker.cpp (testRules): Included variable
	predicate in body in list of safe variables.

	Fixes bug: #19, #20, #21


2006-05-09  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Term.h: Added methods Term::registerAuxiliaryName()
	and Term::getAuxiliaryNames() as an interface for the list of
	auxiliary names.
	* src/dlvhex/Term.cpp: Likewise.

	* src/dlvhex/ExternalAtom.cpp (constructor): Adapted to call new
	Term::registerAuxiliaryName().
	* src/dlvhex/Rule.cpp (WeakConstraint constructor): Likewise.
	* src/dlvhex/dlvhex.cpp (main): Likewise.


2006-05-07  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* src/dlvhex/ASPsolver.cpp (ASPsolver::callSolver): Extended verbose
	output in case of solver failure.

	* src/dlvhex/ExternalAtom.cpp (ExternalAtom::operator==): Corrected
	equality operator.

	* src/dlvhex/dlvhex.cpp (main): Improved help output. Added command
	line switch --noeval. Added verbose output for plugin search
	locations.


2006-05-05  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h: Made operator!= nonvirtual.

	* include/dlvhex/Error.h: Cleaned up error handling.

	* include/dlvhex/ExternalAtom.h: Introduced second operator== for
	comparison with Atom&. Two comparison functions, for Atom& and for
	ExternalAtom&, are needed.
	* src/dlvhex/Error.cpp: Likewise.

	* src/dlvhex/HexParser.ypp: Catching exceptions from propositional
	atom creation.

	* src/dlvhex/HexParserDriver.cpp: (parse): Adapted to new error
	handling.
	* src/dlvhex/dlvhex.cpp: (main): Likewise.


2006-05-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/Atom.h (GetArguments): Made method virtual.

	* include/dlvhex/ExternalAtom.h (GetAguments): Made method virtual.

	* src/dlvhex/ExternalAtom.cpp: Implemented operator==.

	* src/dlvhex/GraphBuilder.cpp (run): Added proper dependency handling
	of chained external atoms within one rule body.

2006-05-04  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h: Changed rewriter stream types to pointers.

	* include/dlvhex/globals.h: Added string to be passed to the ASP
	solver for adding a maxint-directive.

	* src/dlvhex/ASPsolver.cpp (callSolver): Added maxint-directive to
	the program to be solved, from a global variable set in the Hex-parser.

	* src/dlvhex/AnswerSet.cpp (moreExpensiveThan): Corrected error in
	reading weights of the specified weight-vector.

	* src/dlvhex/Atom.cpp (Constructor): Moved assertion for nonground
	predicate names to initialization of non-propositional atoms. Added
	SyntaxError in case of variable propositional atoms.

	* src/dlvhex/HexParser.ypp: Added parsing of maxint-directive.
	Admitted empty parentheses for external atoms with output arity zero.

	* src/dlvhex/dlvhex.cpp (main): Corrected handling of streams and
	rewriters.

	* src/dlvhex/globals.cpp: Added string for maxint-directive.

2006-05-03  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/AnswerSet.h: New File.

	* include/dlvhex/Makefile.am: Added AnswerSet.h.

	* include/dlvhex/OutputBuilder.h: Changed all AtomSet to AnswerSet.

	* include/dlvhex/Program.h: Added addition and retrieval for weak
	constraints.
	* src/dlvhex/Program.cpp: Likewise.

	* include/dlvhex/ResultContainer.h: Changed type of result from
	std::vector<AtomSet> to std::set<AnswerSetPtr,
	ResultContainer::AnswerSetPtrCompare>. Added comparison operator
	for AnswerSetPtrCompare. Added handling of weak constraint-
	auxiliary predicate. Added vector for optimal costs.
	* src/dlvhex/ResultContainer.cpp: Likewise.

	* include/dlvhex/Rule.h: Added class for weak constraints, derived
	from Rule.
	* src/dlvhex/Rule.cpp: Likewise.

	* src/dlvhex/AnswerSet.cpp: New file.

	* src/dlvhex/DLVresultParser.ypp: Introduced number type for
	integer handling.
	* src/dlvhex/DLVresultScanner.lpp: Likewise.

	* src/dlvhex/HexParser.ypp: Added weak constraint handling.
	Introduced number type for integer handling. Added predicate syntax
	for builtins.

	* src/dlvhex/HexScanner.lpp: Introduced number type for integer
	handling.

	* src/dlvhex/Makefile.am: Added AnswerSet.cpp.

	* src/dlvhex/OutputBuilder.cpp (buildAnswerSet): Added weight
	output for answer set costs.

	* src/dlvhex/ParserDriver.cpp: Corrected bug of wrong line output
	in case of syntax errors.

	* src/dlvhex/Term.cpp (operator!=) Corrected bug in handling
	NULLCONST.

	* src/dlvhex/dlvhex.cpp (main): Reactivated dlt preparsing. Added
	support for weak constraints.

	Fixes bug: #9, #10, #11

2006-05-02  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* include/dlvhex/PluginInterface.h (setOptions): Modified argument type.

	* src/dlvhex/AtomSet.cpp (operator<) Corrected semantics of AtomSet
	comparison.

	* src/dlvhex/GuessCheckModelGenerator.cpp (compute): Corrected bug in
	creation of guessing rules - replacement atoms for external atoms were
	created without input arguments.

	* src/dlvhex/dlvhex.cpp (main): Updated option handling, passing
	unparsed options to plugins and aborting, if any options are left
	after plugins. Commented out dlt-preparsing. Activated
	plugin-rewriters.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp (testSimple): Removed
	debug output.

	* src/testsuite/dlvhex/TypeTest.cpp (testConstruction): Added test
	for set of AtomSet comparison.

2006-04-25  Roman Schindlauer  <roman@kr.tuwien.ac.at>

	* Makefile.am: Added doxygen stuff to EXTRA_DIST files.

	* README: Added.

	* ChangeLog: Added.

	* configure.ac: Removed bison/flex checks, commented back in boost-header
	checks.

	* examples/Makefile.am: Removed shop.owl (needs other plugins, not
	useful as pure dlvhex-example).

	* src/dlvhex/Makefile.am: Reformat. Added bison output files to
	EXTRA_DIST.

	* src/dlvhex/ASPsolver.cpp (callSolver): Corrected debug-output.

	* src/dlvhex/AtomFactory.cpp (reset): Added reset() to clear factory.
	* include/dlvhex/AtomFactory.h: Likewise.

	* src/dlvhex/AtomSet.cpp (multiplySets): Added check for minimality.

	* src/dlvhex/Literal.cpp (operator=): Added assignment operator.
	* include/dlvhex/Literal.h: Likewise.

	* src/dlvhex/dlvhex.cpp (main): Prepared integration of
	plugin-rewriters.

	* include/dlvhex/Makefile.am: Added missing header files.

	* include/dlvhex/BoostComponentFinder.h: Removed superficial
	header-includes.

	* include/dlvhex/ComponentFinder.h: Added (empty) virtual Destructor.

	* include/dlvhex/DLVresultFlexLexer.h: Removed.

	* include/dlvhex/AtomSet.h: Added operator< for comparison of sets of AtomSets (does
	not work yet).

	* src/testsuite/dlvhex/ASPsolverTest.cpp (tearDown): Added reset of
	AtomFactory after each test in order to avoid conflicting atoms.

	* src/testsuite/dlvhex/TestGraphProcessor.cpp: Added.

	* src/testsuite/dlvhex/Makefile.am: Added dlvhex-sources necessary for
	the new TestGraphProcessor class.

	* include/testsuite/dlvhex/Makefile.am: Added TestGraphProcessor.h.
